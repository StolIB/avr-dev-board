
avr-dev-board-ext-counter-example.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  000012a6  0000133a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000012a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000015b  00800126  00800126  00001360  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001360  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000001d0  00000000  00000000  000013bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001164  00000000  00000000  0000158c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000831  00000000  00000000  000026f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000897  00000000  00000000  00002f21  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000498  00000000  00000000  000037b8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000541  00000000  00000000  00003c50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000b40  00000000  00000000  00004191  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000160  00000000  00000000  00004cd1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 d5 00 	jmp	0x1aa	; 0x1aa <__vector_2>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 12 03 	jmp	0x624	; 0x624 <__vector_13>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 52 01 	jmp	0x2a4	; 0x2a4 <__vector_16>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 4c 04 	jmp	0x898	; 0x898 <__vector_18>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__vector_21>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e6 ea       	ldi	r30, 0xA6	; 166
      7c:	f2 e1       	ldi	r31, 0x12	; 18
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	a6 32       	cpi	r26, 0x26	; 38
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	22 e0       	ldi	r18, 0x02	; 2
      8c:	a6 e2       	ldi	r26, 0x26	; 38
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a1 38       	cpi	r26, 0x81	; 129
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 70 00 	call	0xe0	; 0xe0 <main>
      9e:	0c 94 51 09 	jmp	0x12a2	; 0x12a2 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <__vector_21>:
	/* If more than 8-bit precision is used - read ADCL first and ADCH second. */
	return adc_result;
}

ISR(ADC_vect)
{
      a6:	1f 92       	push	r1
      a8:	0f 92       	push	r0
      aa:	0f b6       	in	r0, 0x3f	; 63
      ac:	0f 92       	push	r0
      ae:	11 24       	eor	r1, r1
      b0:	2f 93       	push	r18
      b2:	8f 93       	push	r24
      b4:	9f 93       	push	r25
	adc_done = 1;
      b6:	81 e0       	ldi	r24, 0x01	; 1
      b8:	80 93 28 01 	sts	0x0128, r24
	uint16_t temp = 0;
	temp |= ADCL;
      bc:	80 91 78 00 	lds	r24, 0x0078
	temp |= (ADCH << 8);
      c0:	20 91 79 00 	lds	r18, 0x0079
      c4:	90 e0       	ldi	r25, 0x00	; 0
      c6:	92 2b       	or	r25, r18
	adc_result = temp;
      c8:	90 93 27 01 	sts	0x0127, r25
      cc:	80 93 26 01 	sts	0x0126, r24

	//adc_result = (int)(adc_result + (float)((temp - adc_result)*0.20));
}
      d0:	9f 91       	pop	r25
      d2:	8f 91       	pop	r24
      d4:	2f 91       	pop	r18
      d6:	0f 90       	pop	r0
      d8:	0f be       	out	0x3f, r0	; 63
      da:	0f 90       	pop	r0
      dc:	1f 90       	pop	r1
      de:	18 95       	reti

000000e0 <main>:
#include "counter.h"
#include "uart.h"
#include "timer.h"

int main(void)
{
      e0:	cf 93       	push	r28
      e2:	df 93       	push	r29
      e4:	cd b7       	in	r28, 0x3d	; 61
      e6:	de b7       	in	r29, 0x3e	; 62
      e8:	2a 97       	sbiw	r28, 0x0a	; 10
      ea:	0f b6       	in	r0, 0x3f	; 63
      ec:	f8 94       	cli
      ee:	de bf       	out	0x3e, r29	; 62
      f0:	0f be       	out	0x3f, r0	; 63
      f2:	cd bf       	out	0x3d, r28	; 61
	init_uart(UART_9600);
      f4:	83 e3       	ldi	r24, 0x33	; 51
      f6:	0e 94 0d 04 	call	0x81a	; 0x81a <init_uart>
	init_timer_1(PRESCALER8, 1000);
      fa:	68 ee       	ldi	r22, 0xE8	; 232
      fc:	73 e0       	ldi	r23, 0x03	; 3
      fe:	82 e0       	ldi	r24, 0x02	; 2
     100:	0e 94 ec 02 	call	0x5d8	; 0x5d8 <init_timer_1>
	enable_counter();
     104:	0e 94 b8 00 	call	0x170	; 0x170 <enable_counter>
	char s[10] = {'\0'};
     108:	fe 01       	movw	r30, r28
     10a:	31 96       	adiw	r30, 0x01	; 1
     10c:	8a e0       	ldi	r24, 0x0A	; 10
     10e:	df 01       	movw	r26, r30
     110:	1d 92       	st	X+, r1
     112:	8a 95       	dec	r24
     114:	e9 f7       	brne	.-6      	; 0x110 <main+0x30>
	
    while(1){
        send_string("Hello World from AVR!\n\r");
		send_string("Counts: ");
		sprintf(s, "%li", get_count());
     116:	0f 2e       	mov	r0, r31
     118:	f1 e2       	ldi	r31, 0x21	; 33
     11a:	ef 2e       	mov	r14, r31
     11c:	f1 e0       	ldi	r31, 0x01	; 1
     11e:	ff 2e       	mov	r15, r31
     120:	f0 2d       	mov	r31, r0
     122:	8f 01       	movw	r16, r30
	init_timer_1(PRESCALER8, 1000);
	enable_counter();
	char s[10] = {'\0'};
	
    while(1){
        send_string("Hello World from AVR!\n\r");
     124:	80 e0       	ldi	r24, 0x00	; 0
     126:	91 e0       	ldi	r25, 0x01	; 1
     128:	0e 94 34 04 	call	0x868	; 0x868 <send_string>
		send_string("Counts: ");
     12c:	88 e1       	ldi	r24, 0x18	; 24
     12e:	91 e0       	ldi	r25, 0x01	; 1
     130:	0e 94 34 04 	call	0x868	; 0x868 <send_string>
		sprintf(s, "%li", get_count());
     134:	0e 94 cc 00 	call	0x198	; 0x198 <get_count>
     138:	9f 93       	push	r25
     13a:	8f 93       	push	r24
     13c:	7f 93       	push	r23
     13e:	6f 93       	push	r22
     140:	ff 92       	push	r15
     142:	ef 92       	push	r14
     144:	1f 93       	push	r17
     146:	0f 93       	push	r16
     148:	0e 94 80 06 	call	0xd00	; 0xd00 <sprintf>
		send_string(s);
     14c:	c8 01       	movw	r24, r16
     14e:	0e 94 34 04 	call	0x868	; 0x868 <send_string>
		send_string("\n\r");
     152:	85 e1       	ldi	r24, 0x15	; 21
     154:	91 e0       	ldi	r25, 0x01	; 1
     156:	0e 94 34 04 	call	0x868	; 0x868 <send_string>
		s[0] = '\0';
     15a:	19 82       	std	Y+1, r1	; 0x01
		pause_loop(1000);
     15c:	88 ee       	ldi	r24, 0xE8	; 232
     15e:	93 e0       	ldi	r25, 0x03	; 3
     160:	0e 94 fb 02 	call	0x5f6	; 0x5f6 <pause_loop>
     164:	0f b6       	in	r0, 0x3f	; 63
     166:	f8 94       	cli
     168:	de bf       	out	0x3e, r29	; 62
     16a:	0f be       	out	0x3f, r0	; 63
     16c:	cd bf       	out	0x3d, r28	; 61
     16e:	da cf       	rjmp	.-76     	; 0x124 <main+0x44>

00000170 <enable_counter>:

static volatile long counts = 0;

void enable_counter()
{
	set_pin_dir(&EXT_DDR, EXT_CH_A, INPUT);
     170:	40 e0       	ldi	r20, 0x00	; 0
     172:	62 e0       	ldi	r22, 0x02	; 2
     174:	8a e2       	ldi	r24, 0x2A	; 42
     176:	90 e0       	ldi	r25, 0x00	; 0
     178:	0e 94 10 01 	call	0x220	; 0x220 <set_pin_dir>
	set_pin_dir(&EXT_DDR, EXT_CH_B, INPUT);
     17c:	40 e0       	ldi	r20, 0x00	; 0
     17e:	63 e0       	ldi	r22, 0x03	; 3
     180:	8a e2       	ldi	r24, 0x2A	; 42
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	0e 94 10 01 	call	0x220	; 0x220 <set_pin_dir>
	EICRA |= (1 << ISC11);	/* Falling edge on INT1. */
     188:	e9 e6       	ldi	r30, 0x69	; 105
     18a:	f0 e0       	ldi	r31, 0x00	; 0
     18c:	80 81       	ld	r24, Z
     18e:	88 60       	ori	r24, 0x08	; 8
     190:	80 83       	st	Z, r24
	EIMSK |= (1 << INT1);
     192:	e9 9a       	sbi	0x1d, 1	; 29
	sei();
     194:	78 94       	sei
     196:	08 95       	ret

00000198 <get_count>:
}

long get_count()
{
	return counts;
     198:	60 91 29 01 	lds	r22, 0x0129
     19c:	70 91 2a 01 	lds	r23, 0x012A
     1a0:	80 91 2b 01 	lds	r24, 0x012B
     1a4:	90 91 2c 01 	lds	r25, 0x012C
}
     1a8:	08 95       	ret

000001aa <__vector_2>:

ISR(INT1_vect)
{
     1aa:	1f 92       	push	r1
     1ac:	0f 92       	push	r0
     1ae:	0f b6       	in	r0, 0x3f	; 63
     1b0:	0f 92       	push	r0
     1b2:	11 24       	eor	r1, r1
     1b4:	8f 93       	push	r24
     1b6:	9f 93       	push	r25
     1b8:	af 93       	push	r26
     1ba:	bf 93       	push	r27
	if( EXT_PORT & (1 << EXT_CH_A) ) counts--;	/* CCW */
     1bc:	4a 9b       	sbis	0x09, 2	; 9
     1be:	14 c0       	rjmp	.+40     	; 0x1e8 <__vector_2+0x3e>
     1c0:	80 91 29 01 	lds	r24, 0x0129
     1c4:	90 91 2a 01 	lds	r25, 0x012A
     1c8:	a0 91 2b 01 	lds	r26, 0x012B
     1cc:	b0 91 2c 01 	lds	r27, 0x012C
     1d0:	01 97       	sbiw	r24, 0x01	; 1
     1d2:	a1 09       	sbc	r26, r1
     1d4:	b1 09       	sbc	r27, r1
     1d6:	80 93 29 01 	sts	0x0129, r24
     1da:	90 93 2a 01 	sts	0x012A, r25
     1de:	a0 93 2b 01 	sts	0x012B, r26
     1e2:	b0 93 2c 01 	sts	0x012C, r27
     1e6:	13 c0       	rjmp	.+38     	; 0x20e <__vector_2+0x64>
	else counts++;								/* CW */
     1e8:	80 91 29 01 	lds	r24, 0x0129
     1ec:	90 91 2a 01 	lds	r25, 0x012A
     1f0:	a0 91 2b 01 	lds	r26, 0x012B
     1f4:	b0 91 2c 01 	lds	r27, 0x012C
     1f8:	01 96       	adiw	r24, 0x01	; 1
     1fa:	a1 1d       	adc	r26, r1
     1fc:	b1 1d       	adc	r27, r1
     1fe:	80 93 29 01 	sts	0x0129, r24
     202:	90 93 2a 01 	sts	0x012A, r25
     206:	a0 93 2b 01 	sts	0x012B, r26
     20a:	b0 93 2c 01 	sts	0x012C, r27
}
     20e:	bf 91       	pop	r27
     210:	af 91       	pop	r26
     212:	9f 91       	pop	r25
     214:	8f 91       	pop	r24
     216:	0f 90       	pop	r0
     218:	0f be       	out	0x3f, r0	; 63
     21a:	0f 90       	pop	r0
     21c:	1f 90       	pop	r1
     21e:	18 95       	reti

00000220 <set_pin_dir>:

#include "gpio.h"

void set_pin_dir(volatile uint8_t *target_port, uint8_t pin_no, uint8_t dir)
{
	switch(dir){
     220:	44 23       	and	r20, r20
     222:	89 f0       	breq	.+34     	; 0x246 <set_pin_dir+0x26>
     224:	41 30       	cpi	r20, 0x01	; 1
     226:	f1 f4       	brne	.+60     	; 0x264 <set_pin_dir+0x44>
	case OUTPUT:
		(*target_port) |= (1 << pin_no);
     228:	fc 01       	movw	r30, r24
     22a:	40 81       	ld	r20, Z
     22c:	21 e0       	ldi	r18, 0x01	; 1
     22e:	30 e0       	ldi	r19, 0x00	; 0
     230:	f9 01       	movw	r30, r18
     232:	02 c0       	rjmp	.+4      	; 0x238 <set_pin_dir+0x18>
     234:	ee 0f       	add	r30, r30
     236:	ff 1f       	adc	r31, r31
     238:	6a 95       	dec	r22
     23a:	e2 f7       	brpl	.-8      	; 0x234 <set_pin_dir+0x14>
     23c:	bf 01       	movw	r22, r30
     23e:	64 2b       	or	r22, r20
     240:	fc 01       	movw	r30, r24
     242:	60 83       	st	Z, r22
		break;
     244:	08 95       	ret
	case INPUT:
		(*target_port) &= ~(1 << pin_no);
     246:	fc 01       	movw	r30, r24
     248:	40 81       	ld	r20, Z
     24a:	21 e0       	ldi	r18, 0x01	; 1
     24c:	30 e0       	ldi	r19, 0x00	; 0
     24e:	f9 01       	movw	r30, r18
     250:	02 c0       	rjmp	.+4      	; 0x256 <set_pin_dir+0x36>
     252:	ee 0f       	add	r30, r30
     254:	ff 1f       	adc	r31, r31
     256:	6a 95       	dec	r22
     258:	e2 f7       	brpl	.-8      	; 0x252 <set_pin_dir+0x32>
     25a:	bf 01       	movw	r22, r30
     25c:	60 95       	com	r22
     25e:	64 23       	and	r22, r20
     260:	fc 01       	movw	r30, r24
     262:	60 83       	st	Z, r22
     264:	08 95       	ret

00000266 <set_pin>:
	}
}

void set_pin(volatile uint8_t *target_port, uint8_t pin_no)
{
	(*target_port) |= (1 << pin_no);
     266:	fc 01       	movw	r30, r24
     268:	40 81       	ld	r20, Z
     26a:	21 e0       	ldi	r18, 0x01	; 1
     26c:	30 e0       	ldi	r19, 0x00	; 0
     26e:	f9 01       	movw	r30, r18
     270:	02 c0       	rjmp	.+4      	; 0x276 <set_pin+0x10>
     272:	ee 0f       	add	r30, r30
     274:	ff 1f       	adc	r31, r31
     276:	6a 95       	dec	r22
     278:	e2 f7       	brpl	.-8      	; 0x272 <set_pin+0xc>
     27a:	bf 01       	movw	r22, r30
     27c:	64 2b       	or	r22, r20
     27e:	fc 01       	movw	r30, r24
     280:	60 83       	st	Z, r22
     282:	08 95       	ret

00000284 <clear_pin>:
}

void clear_pin(volatile uint8_t *target_port, uint8_t pin_no)
{
	(*target_port) &= ~(1 << pin_no);
     284:	fc 01       	movw	r30, r24
     286:	40 81       	ld	r20, Z
     288:	21 e0       	ldi	r18, 0x01	; 1
     28a:	30 e0       	ldi	r19, 0x00	; 0
     28c:	f9 01       	movw	r30, r18
     28e:	02 c0       	rjmp	.+4      	; 0x294 <clear_pin+0x10>
     290:	ee 0f       	add	r30, r30
     292:	ff 1f       	adc	r31, r31
     294:	6a 95       	dec	r22
     296:	e2 f7       	brpl	.-8      	; 0x290 <clear_pin+0xc>
     298:	bf 01       	movw	r22, r30
     29a:	60 95       	com	r22
     29c:	64 23       	and	r22, r20
     29e:	fc 01       	movw	r30, r24
     2a0:	60 83       	st	Z, r22
     2a2:	08 95       	ret

000002a4 <__vector_16>:
{
	pid_flag = PID_ON;
}

ISR(TIMER0_OVF_vect)
{
     2a4:	1f 92       	push	r1
     2a6:	0f 92       	push	r0
     2a8:	0f b6       	in	r0, 0x3f	; 63
     2aa:	0f 92       	push	r0
     2ac:	11 24       	eor	r1, r1
     2ae:	4f 92       	push	r4
     2b0:	5f 92       	push	r5
     2b2:	6f 92       	push	r6
     2b4:	7f 92       	push	r7
     2b6:	8f 92       	push	r8
     2b8:	9f 92       	push	r9
     2ba:	af 92       	push	r10
     2bc:	bf 92       	push	r11
     2be:	cf 92       	push	r12
     2c0:	df 92       	push	r13
     2c2:	ef 92       	push	r14
     2c4:	ff 92       	push	r15
     2c6:	2f 93       	push	r18
     2c8:	3f 93       	push	r19
     2ca:	4f 93       	push	r20
     2cc:	5f 93       	push	r21
     2ce:	6f 93       	push	r22
     2d0:	7f 93       	push	r23
     2d2:	8f 93       	push	r24
     2d4:	9f 93       	push	r25
     2d6:	af 93       	push	r26
     2d8:	bf 93       	push	r27
     2da:	ef 93       	push	r30
     2dc:	ff 93       	push	r31
     2de:	cf 93       	push	r28
     2e0:	df 93       	push	r29
     2e2:	cd b7       	in	r28, 0x3d	; 61
     2e4:	de b7       	in	r29, 0x3e	; 62
     2e6:	2c 97       	sbiw	r28, 0x0c	; 12
     2e8:	de bf       	out	0x3e, r29	; 62
     2ea:	cd bf       	out	0x3d, r28	; 61
	if(pid_flag == 1) {
     2ec:	80 91 2d 01 	lds	r24, 0x012D
     2f0:	81 30       	cpi	r24, 0x01	; 1
     2f2:	09 f0       	breq	.+2      	; 0x2f6 <__vector_16+0x52>
     2f4:	4c c1       	rjmp	.+664    	; 0x58e <__vector_16+0x2ea>
		my_pid.pid_tick_sample++;
     2f6:	e3 e4       	ldi	r30, 0x43	; 67
     2f8:	f1 e0       	ldi	r31, 0x01	; 1
     2fa:	80 81       	ld	r24, Z
     2fc:	91 81       	ldd	r25, Z+1	; 0x01
     2fe:	01 96       	adiw	r24, 0x01	; 1
     300:	91 83       	std	Z+1, r25	; 0x01
     302:	80 83       	st	Z, r24
		if(my_pid.pid_tick_sample >= my_pid.sample_period) {
     304:	20 81       	ld	r18, Z
     306:	31 81       	ldd	r19, Z+1	; 0x01
     308:	80 91 3d 01 	lds	r24, 0x013D
     30c:	90 91 3e 01 	lds	r25, 0x013E
     310:	28 17       	cp	r18, r24
     312:	39 07       	cpc	r19, r25
     314:	08 f4       	brcc	.+2      	; 0x318 <__vector_16+0x74>
     316:	ff c0       	rjmp	.+510    	; 0x516 <__vector_16+0x272>
			my_pid.pid_tick_sample = 0;
     318:	10 92 44 01 	sts	0x0144, r1
     31c:	10 92 43 01 	sts	0x0143, r1
}

//Gets called in timer 0 interrupt routine.
static void pid()
{
	long count = get_count();
     320:	0e 94 cc 00 	call	0x198	; 0x198 <get_count>
     324:	6b 01       	movw	r12, r22
     326:	7c 01       	movw	r14, r24
	int temp = 0;
	/* Speed difference. */
	my_pid.err = my_pid.ref_speed - (uint16_t)(count - my_pid.last_count);
     328:	20 91 3b 01 	lds	r18, 0x013B
     32c:	30 91 3c 01 	lds	r19, 0x013C
     330:	80 91 5b 01 	lds	r24, 0x015B
     334:	90 91 5c 01 	lds	r25, 0x015C
     338:	a0 91 5d 01 	lds	r26, 0x015D
     33c:	b0 91 5e 01 	lds	r27, 0x015E
     340:	82 0f       	add	r24, r18
     342:	93 1f       	adc	r25, r19
     344:	8c 19       	sub	r24, r12
     346:	9d 09       	sbc	r25, r13
     348:	a0 e0       	ldi	r26, 0x00	; 0
     34a:	b0 e0       	ldi	r27, 0x00	; 0
     34c:	2b e4       	ldi	r18, 0x4B	; 75
     34e:	31 e0       	ldi	r19, 0x01	; 1
     350:	f9 01       	movw	r30, r18
     352:	80 83       	st	Z, r24
     354:	91 83       	std	Z+1, r25	; 0x01
     356:	a2 83       	std	Z+2, r26	; 0x02
     358:	b3 83       	std	Z+3, r27	; 0x03

	/* Error sum. */
	my_pid.err_sum += my_pid.err;
     35a:	e7 e5       	ldi	r30, 0x57	; 87
     35c:	f1 e0       	ldi	r31, 0x01	; 1
     35e:	40 81       	ld	r20, Z
     360:	51 81       	ldd	r21, Z+1	; 0x01
     362:	62 81       	ldd	r22, Z+2	; 0x02
     364:	73 81       	ldd	r23, Z+3	; 0x03
     366:	d9 01       	movw	r26, r18
     368:	8d 90       	ld	r8, X+
     36a:	9d 90       	ld	r9, X+
     36c:	ad 90       	ld	r10, X+
     36e:	bc 90       	ld	r11, X
     370:	d5 01       	movw	r26, r10
     372:	c4 01       	movw	r24, r8
     374:	84 0f       	add	r24, r20
     376:	95 1f       	adc	r25, r21
     378:	a6 1f       	adc	r26, r22
     37a:	b7 1f       	adc	r27, r23
     37c:	80 83       	st	Z, r24
     37e:	91 83       	std	Z+1, r25	; 0x01
     380:	a2 83       	std	Z+2, r26	; 0x02
     382:	b3 83       	std	Z+3, r27	; 0x03
	if(my_pid.err_sum > 200) {
     384:	80 81       	ld	r24, Z
     386:	91 81       	ldd	r25, Z+1	; 0x01
     388:	a2 81       	ldd	r26, Z+2	; 0x02
     38a:	b3 81       	ldd	r27, Z+3	; 0x03
     38c:	89 3c       	cpi	r24, 0xC9	; 201
     38e:	91 05       	cpc	r25, r1
     390:	a1 05       	cpc	r26, r1
     392:	b1 05       	cpc	r27, r1
     394:	64 f0       	brlt	.+24     	; 0x3ae <__vector_16+0x10a>
		my_pid.err_sum = 200;
     396:	88 ec       	ldi	r24, 0xC8	; 200
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	a0 e0       	ldi	r26, 0x00	; 0
     39c:	b0 e0       	ldi	r27, 0x00	; 0
     39e:	80 93 57 01 	sts	0x0157, r24
     3a2:	90 93 58 01 	sts	0x0158, r25
     3a6:	a0 93 59 01 	sts	0x0159, r26
     3aa:	b0 93 5a 01 	sts	0x015A, r27
	}

	/* Error difference. */
	my_pid.err_diff = my_pid.err - my_pid.last_err;
     3ae:	2b e4       	ldi	r18, 0x4B	; 75
     3b0:	31 e0       	ldi	r19, 0x01	; 1
     3b2:	f9 01       	movw	r30, r18
     3b4:	80 81       	ld	r24, Z
     3b6:	91 81       	ldd	r25, Z+1	; 0x01
     3b8:	a2 81       	ldd	r26, Z+2	; 0x02
     3ba:	b3 81       	ldd	r27, Z+3	; 0x03
     3bc:	40 91 4f 01 	lds	r20, 0x014F
     3c0:	50 91 50 01 	lds	r21, 0x0150
     3c4:	60 91 51 01 	lds	r22, 0x0151
     3c8:	70 91 52 01 	lds	r23, 0x0152
     3cc:	84 1b       	sub	r24, r20
     3ce:	95 0b       	sbc	r25, r21
     3d0:	a6 0b       	sbc	r26, r22
     3d2:	b7 0b       	sbc	r27, r23
     3d4:	e3 e5       	ldi	r30, 0x53	; 83
     3d6:	f1 e0       	ldi	r31, 0x01	; 1
     3d8:	80 83       	st	Z, r24
     3da:	91 83       	std	Z+1, r25	; 0x01
     3dc:	a2 83       	std	Z+2, r26	; 0x02
     3de:	b3 83       	std	Z+3, r27	; 0x03

	/* PID output */
	temp = (my_pid.kp*my_pid.err + my_pid.ki*my_pid.err_sum + my_pid.kd*my_pid.err_diff)/PID_CONST;
     3e0:	80 90 2f 01 	lds	r8, 0x012F
     3e4:	90 90 30 01 	lds	r9, 0x0130
     3e8:	a0 90 31 01 	lds	r10, 0x0131
     3ec:	b0 90 32 01 	lds	r11, 0x0132
     3f0:	d9 01       	movw	r26, r18
     3f2:	6d 91       	ld	r22, X+
     3f4:	7d 91       	ld	r23, X+
     3f6:	8d 91       	ld	r24, X+
     3f8:	9c 91       	ld	r25, X
     3fa:	20 91 33 01 	lds	r18, 0x0133
     3fe:	30 91 34 01 	lds	r19, 0x0134
     402:	40 91 35 01 	lds	r20, 0x0135
     406:	50 91 36 01 	lds	r21, 0x0136
     40a:	29 83       	std	Y+1, r18	; 0x01
     40c:	3a 83       	std	Y+2, r19	; 0x02
     40e:	4b 83       	std	Y+3, r20	; 0x03
     410:	5c 83       	std	Y+4, r21	; 0x04
     412:	40 90 57 01 	lds	r4, 0x0157
     416:	50 90 58 01 	lds	r5, 0x0158
     41a:	60 90 59 01 	lds	r6, 0x0159
     41e:	70 90 5a 01 	lds	r7, 0x015A
     422:	20 91 37 01 	lds	r18, 0x0137
     426:	30 91 38 01 	lds	r19, 0x0138
     42a:	40 91 39 01 	lds	r20, 0x0139
     42e:	50 91 3a 01 	lds	r21, 0x013A
     432:	2d 83       	std	Y+5, r18	; 0x05
     434:	3e 83       	std	Y+6, r19	; 0x06
     436:	4f 83       	std	Y+7, r20	; 0x07
     438:	58 87       	std	Y+8, r21	; 0x08
     43a:	20 81       	ld	r18, Z
     43c:	31 81       	ldd	r19, Z+1	; 0x01
     43e:	42 81       	ldd	r20, Z+2	; 0x02
     440:	53 81       	ldd	r21, Z+3	; 0x03
     442:	29 87       	std	Y+9, r18	; 0x09
     444:	3a 87       	std	Y+10, r19	; 0x0a
     446:	4b 87       	std	Y+11, r20	; 0x0b
     448:	5c 87       	std	Y+12, r21	; 0x0c
     44a:	0e 94 91 05 	call	0xb22	; 0xb22 <__floatsisf>
     44e:	9b 01       	movw	r18, r22
     450:	ac 01       	movw	r20, r24
     452:	c5 01       	movw	r24, r10
     454:	b4 01       	movw	r22, r8
     456:	0e 94 1d 06 	call	0xc3a	; 0xc3a <__mulsf3>
     45a:	4b 01       	movw	r8, r22
     45c:	5c 01       	movw	r10, r24
     45e:	c3 01       	movw	r24, r6
     460:	b2 01       	movw	r22, r4
     462:	0e 94 91 05 	call	0xb22	; 0xb22 <__floatsisf>
     466:	9b 01       	movw	r18, r22
     468:	ac 01       	movw	r20, r24
     46a:	69 81       	ldd	r22, Y+1	; 0x01
     46c:	7a 81       	ldd	r23, Y+2	; 0x02
     46e:	8b 81       	ldd	r24, Y+3	; 0x03
     470:	9c 81       	ldd	r25, Y+4	; 0x04
     472:	0e 94 1d 06 	call	0xc3a	; 0xc3a <__mulsf3>
     476:	9b 01       	movw	r18, r22
     478:	ac 01       	movw	r20, r24
     47a:	c5 01       	movw	r24, r10
     47c:	b4 01       	movw	r22, r8
     47e:	0e 94 92 04 	call	0x924	; 0x924 <__addsf3>
     482:	4b 01       	movw	r8, r22
     484:	5c 01       	movw	r10, r24
     486:	69 85       	ldd	r22, Y+9	; 0x09
     488:	7a 85       	ldd	r23, Y+10	; 0x0a
     48a:	8b 85       	ldd	r24, Y+11	; 0x0b
     48c:	9c 85       	ldd	r25, Y+12	; 0x0c
     48e:	0e 94 91 05 	call	0xb22	; 0xb22 <__floatsisf>
     492:	9b 01       	movw	r18, r22
     494:	ac 01       	movw	r20, r24
     496:	6d 81       	ldd	r22, Y+5	; 0x05
     498:	7e 81       	ldd	r23, Y+6	; 0x06
     49a:	8f 81       	ldd	r24, Y+7	; 0x07
     49c:	98 85       	ldd	r25, Y+8	; 0x08
     49e:	0e 94 1d 06 	call	0xc3a	; 0xc3a <__mulsf3>
     4a2:	9b 01       	movw	r18, r22
     4a4:	ac 01       	movw	r20, r24
     4a6:	c5 01       	movw	r24, r10
     4a8:	b4 01       	movw	r22, r8
     4aa:	0e 94 92 04 	call	0x924	; 0x924 <__addsf3>
     4ae:	20 e0       	ldi	r18, 0x00	; 0
     4b0:	30 e0       	ldi	r19, 0x00	; 0
     4b2:	40 e2       	ldi	r20, 0x20	; 32
     4b4:	51 e4       	ldi	r21, 0x41	; 65
     4b6:	0e 94 f6 04 	call	0x9ec	; 0x9ec <__divsf3>
     4ba:	0e 94 5e 05 	call	0xabc	; 0xabc <__fixsfsi>
	if(temp > my_pid.pwm_period) {
     4be:	20 91 47 01 	lds	r18, 0x0147
     4c2:	30 91 48 01 	lds	r19, 0x0148
     4c6:	26 17       	cp	r18, r22
     4c8:	37 07       	cpc	r19, r23
     4ca:	48 f4       	brcc	.+18     	; 0x4de <__vector_16+0x23a>
		my_pid.pwm_top_val = my_pid.pwm_period;
     4cc:	80 91 47 01 	lds	r24, 0x0147
     4d0:	90 91 48 01 	lds	r25, 0x0148
     4d4:	90 93 46 01 	sts	0x0146, r25
     4d8:	80 93 45 01 	sts	0x0145, r24
     4dc:	04 c0       	rjmp	.+8      	; 0x4e6 <__vector_16+0x242>
		} else {
		my_pid.pwm_top_val = temp;
     4de:	70 93 46 01 	sts	0x0146, r23
     4e2:	60 93 45 01 	sts	0x0145, r22
	}

	/* Memorize last values. */
	my_pid.last_count = count;
     4e6:	c0 92 5b 01 	sts	0x015B, r12
     4ea:	d0 92 5c 01 	sts	0x015C, r13
     4ee:	e0 92 5d 01 	sts	0x015D, r14
     4f2:	f0 92 5e 01 	sts	0x015E, r15
	my_pid.last_err = my_pid.err;
     4f6:	80 91 4b 01 	lds	r24, 0x014B
     4fa:	90 91 4c 01 	lds	r25, 0x014C
     4fe:	a0 91 4d 01 	lds	r26, 0x014D
     502:	b0 91 4e 01 	lds	r27, 0x014E
     506:	80 93 4f 01 	sts	0x014F, r24
     50a:	90 93 50 01 	sts	0x0150, r25
     50e:	a0 93 51 01 	sts	0x0151, r26
     512:	b0 93 52 01 	sts	0x0152, r27
		if(my_pid.pid_tick_sample >= my_pid.sample_period) {
			my_pid.pid_tick_sample = 0;
			pid();
		}

		my_pid.pid_pwm_tick++;
     516:	e9 e4       	ldi	r30, 0x49	; 73
     518:	f1 e0       	ldi	r31, 0x01	; 1
     51a:	80 81       	ld	r24, Z
     51c:	91 81       	ldd	r25, Z+1	; 0x01
     51e:	01 96       	adiw	r24, 0x01	; 1
     520:	91 83       	std	Z+1, r25	; 0x01
     522:	80 83       	st	Z, r24
		if(my_pid.pid_pwm_tick >= my_pid.pwm_period && my_pid.pwm_top_val > 0) {
     524:	20 81       	ld	r18, Z
     526:	31 81       	ldd	r19, Z+1	; 0x01
     528:	80 91 47 01 	lds	r24, 0x0147
     52c:	90 91 48 01 	lds	r25, 0x0148
     530:	28 17       	cp	r18, r24
     532:	39 07       	cpc	r19, r25
     534:	b0 f0       	brcs	.+44     	; 0x562 <__vector_16+0x2be>
     536:	80 91 45 01 	lds	r24, 0x0145
     53a:	90 91 46 01 	lds	r25, 0x0146
     53e:	89 2b       	or	r24, r25
     540:	81 f0       	breq	.+32     	; 0x562 <__vector_16+0x2be>
			my_pid.pid_pwm_tick = 0;
     542:	10 92 4a 01 	sts	0x014A, r1
     546:	10 92 49 01 	sts	0x0149, r1
			if(my_pid.dir == CW) MOT_PORT |= (1 << MOT_PIN0);
     54a:	80 91 2e 01 	lds	r24, 0x012E
     54e:	81 11       	cpse	r24, r1
     550:	02 c0       	rjmp	.+4      	; 0x556 <__vector_16+0x2b2>
     552:	29 9a       	sbi	0x05, 1	; 5
     554:	1c c0       	rjmp	.+56     	; 0x58e <__vector_16+0x2ea>
			else if(my_pid.dir == CCW) MOT_PORT |= (1 << MOT_PIN1);
     556:	80 91 2e 01 	lds	r24, 0x012E
     55a:	81 30       	cpi	r24, 0x01	; 1
     55c:	c1 f4       	brne	.+48     	; 0x58e <__vector_16+0x2ea>
     55e:	2a 9a       	sbi	0x05, 2	; 5
     560:	16 c0       	rjmp	.+44     	; 0x58e <__vector_16+0x2ea>
			} else if (my_pid.pid_pwm_tick >= my_pid.pwm_top_val) {
     562:	20 91 49 01 	lds	r18, 0x0149
     566:	30 91 4a 01 	lds	r19, 0x014A
     56a:	80 91 45 01 	lds	r24, 0x0145
     56e:	90 91 46 01 	lds	r25, 0x0146
     572:	28 17       	cp	r18, r24
     574:	39 07       	cpc	r19, r25
     576:	58 f0       	brcs	.+22     	; 0x58e <__vector_16+0x2ea>
			if(my_pid.dir == CW) MOT_PORT &= ~(1 << MOT_PIN0);
     578:	80 91 2e 01 	lds	r24, 0x012E
     57c:	81 11       	cpse	r24, r1
     57e:	02 c0       	rjmp	.+4      	; 0x584 <__vector_16+0x2e0>
     580:	29 98       	cbi	0x05, 1	; 5
     582:	05 c0       	rjmp	.+10     	; 0x58e <__vector_16+0x2ea>
			else if(my_pid.dir == CCW) MOT_PORT &= ~(1 << MOT_PIN1);
     584:	80 91 2e 01 	lds	r24, 0x012E
     588:	81 30       	cpi	r24, 0x01	; 1
     58a:	09 f4       	brne	.+2      	; 0x58e <__vector_16+0x2ea>
     58c:	2a 98       	cbi	0x05, 2	; 5
		}
	}
}
     58e:	2c 96       	adiw	r28, 0x0c	; 12
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	f8 94       	cli
     594:	de bf       	out	0x3e, r29	; 62
     596:	0f be       	out	0x3f, r0	; 63
     598:	cd bf       	out	0x3d, r28	; 61
     59a:	df 91       	pop	r29
     59c:	cf 91       	pop	r28
     59e:	ff 91       	pop	r31
     5a0:	ef 91       	pop	r30
     5a2:	bf 91       	pop	r27
     5a4:	af 91       	pop	r26
     5a6:	9f 91       	pop	r25
     5a8:	8f 91       	pop	r24
     5aa:	7f 91       	pop	r23
     5ac:	6f 91       	pop	r22
     5ae:	5f 91       	pop	r21
     5b0:	4f 91       	pop	r20
     5b2:	3f 91       	pop	r19
     5b4:	2f 91       	pop	r18
     5b6:	ff 90       	pop	r15
     5b8:	ef 90       	pop	r14
     5ba:	df 90       	pop	r13
     5bc:	cf 90       	pop	r12
     5be:	bf 90       	pop	r11
     5c0:	af 90       	pop	r10
     5c2:	9f 90       	pop	r9
     5c4:	8f 90       	pop	r8
     5c6:	7f 90       	pop	r7
     5c8:	6f 90       	pop	r6
     5ca:	5f 90       	pop	r5
     5cc:	4f 90       	pop	r4
     5ce:	0f 90       	pop	r0
     5d0:	0f be       	out	0x3f, r0	; 63
     5d2:	0f 90       	pop	r0
     5d4:	1f 90       	pop	r1
     5d6:	18 95       	reti

000005d8 <init_timer_1>:
{
	uint16_t temp;

	temp = 0;
	temp |= (1 << WGM10 | 1 << WGM11);	/* Fast PWM mode - TOP is OCR1A, auto restart. */
	TCCR1A = temp;
     5d8:	93 e0       	ldi	r25, 0x03	; 3
     5da:	90 93 80 00 	sts	0x0080, r25

	temp = 0;
	temp |= (1 << WGM12 | 1 << WGM13);	/* Fast PWM mode - TOP is OCR1A, auto restart. */
	temp |= (prescaler << CS10);		/* CS2:0 = 010 - Prescaler set to 8. */
     5de:	88 61       	ori	r24, 0x18	; 24
	TCCR1B = temp;
     5e0:	80 93 81 00 	sts	0x0081, r24

	temp = 0;
	temp |= (1 << TOIE0);
	TIMSK1 = temp;
     5e4:	81 e0       	ldi	r24, 0x01	; 1
     5e6:	80 93 6f 00 	sts	0x006F, r24

	OCR1A = topw_val;
     5ea:	70 93 89 00 	sts	0x0089, r23
     5ee:	60 93 88 00 	sts	0x0088, r22

	sei();
     5f2:	78 94       	sei
     5f4:	08 95       	ret

000005f6 <pause_loop>:
	}
}

void pause_loop(uint16_t pause)
{
	pause_time = pause;
     5f6:	a0 e0       	ldi	r26, 0x00	; 0
     5f8:	b0 e0       	ldi	r27, 0x00	; 0
     5fa:	80 93 60 01 	sts	0x0160, r24
     5fe:	90 93 61 01 	sts	0x0161, r25
     602:	a0 93 62 01 	sts	0x0162, r26
     606:	b0 93 63 01 	sts	0x0163, r27
	while(pause_time);
     60a:	80 91 60 01 	lds	r24, 0x0160
     60e:	90 91 61 01 	lds	r25, 0x0161
     612:	a0 91 62 01 	lds	r26, 0x0162
     616:	b0 91 63 01 	lds	r27, 0x0163
     61a:	89 2b       	or	r24, r25
     61c:	8a 2b       	or	r24, r26
     61e:	8b 2b       	or	r24, r27
     620:	a1 f7       	brne	.-24     	; 0x60a <pause_loop+0x14>
}
     622:	08 95       	ret

00000624 <__vector_13>:
		break;
	}
}

ISR(TIMER1_OVF_vect)
{
     624:	1f 92       	push	r1
     626:	0f 92       	push	r0
     628:	0f b6       	in	r0, 0x3f	; 63
     62a:	0f 92       	push	r0
     62c:	11 24       	eor	r1, r1
     62e:	2f 93       	push	r18
     630:	3f 93       	push	r19
     632:	4f 93       	push	r20
     634:	5f 93       	push	r21
     636:	6f 93       	push	r22
     638:	7f 93       	push	r23
     63a:	8f 93       	push	r24
     63c:	9f 93       	push	r25
     63e:	af 93       	push	r26
     640:	bf 93       	push	r27
     642:	ef 93       	push	r30
     644:	ff 93       	push	r31
	if(pwm_flag == PWM_ON) {
     646:	80 91 5f 01 	lds	r24, 0x015F
     64a:	81 30       	cpi	r24, 0x01	; 1
     64c:	09 f0       	breq	.+2      	; 0x650 <__vector_13+0x2c>
     64e:	58 c0       	rjmp	.+176    	; 0x700 <__vector_13+0xdc>
		my_pwm.pwm_tick++;
     650:	eb e7       	ldi	r30, 0x7B	; 123
     652:	f1 e0       	ldi	r31, 0x01	; 1
     654:	80 81       	ld	r24, Z
     656:	91 81       	ldd	r25, Z+1	; 0x01
     658:	a2 81       	ldd	r26, Z+2	; 0x02
     65a:	b3 81       	ldd	r27, Z+3	; 0x03
     65c:	01 96       	adiw	r24, 0x01	; 1
     65e:	a1 1d       	adc	r26, r1
     660:	b1 1d       	adc	r27, r1
     662:	80 83       	st	Z, r24
     664:	91 83       	std	Z+1, r25	; 0x01
     666:	a2 83       	std	Z+2, r26	; 0x02
     668:	b3 83       	std	Z+3, r27	; 0x03
		if(my_pwm.pwm_tick >= my_pwm.period && my_pwm.top_val > 0) {
     66a:	40 81       	ld	r20, Z
     66c:	51 81       	ldd	r21, Z+1	; 0x01
     66e:	62 81       	ldd	r22, Z+2	; 0x02
     670:	73 81       	ldd	r23, Z+3	; 0x03
     672:	80 91 73 01 	lds	r24, 0x0173
     676:	90 91 74 01 	lds	r25, 0x0174
     67a:	a0 91 75 01 	lds	r26, 0x0175
     67e:	b0 91 76 01 	lds	r27, 0x0176
     682:	48 17       	cp	r20, r24
     684:	59 07       	cpc	r21, r25
     686:	6a 07       	cpc	r22, r26
     688:	7b 07       	cpc	r23, r27
     68a:	e8 f0       	brcs	.+58     	; 0x6c6 <__vector_13+0xa2>
     68c:	80 91 77 01 	lds	r24, 0x0177
     690:	90 91 78 01 	lds	r25, 0x0178
     694:	a0 91 79 01 	lds	r26, 0x0179
     698:	b0 91 7a 01 	lds	r27, 0x017A
     69c:	89 2b       	or	r24, r25
     69e:	8a 2b       	or	r24, r26
     6a0:	8b 2b       	or	r24, r27
     6a2:	89 f0       	breq	.+34     	; 0x6c6 <__vector_13+0xa2>
			set_pin(my_pwm.port, my_pwm.pin);
     6a4:	60 91 72 01 	lds	r22, 0x0172
     6a8:	80 91 70 01 	lds	r24, 0x0170
     6ac:	90 91 71 01 	lds	r25, 0x0171
     6b0:	0e 94 33 01 	call	0x266	; 0x266 <set_pin>
			my_pwm.pwm_tick = 0;
     6b4:	10 92 7b 01 	sts	0x017B, r1
     6b8:	10 92 7c 01 	sts	0x017C, r1
     6bc:	10 92 7d 01 	sts	0x017D, r1
     6c0:	10 92 7e 01 	sts	0x017E, r1
     6c4:	1d c0       	rjmp	.+58     	; 0x700 <__vector_13+0xdc>
		} else if(my_pwm.pwm_tick >= my_pwm.top_val) {
     6c6:	40 91 7b 01 	lds	r20, 0x017B
     6ca:	50 91 7c 01 	lds	r21, 0x017C
     6ce:	60 91 7d 01 	lds	r22, 0x017D
     6d2:	70 91 7e 01 	lds	r23, 0x017E
     6d6:	80 91 77 01 	lds	r24, 0x0177
     6da:	90 91 78 01 	lds	r25, 0x0178
     6de:	a0 91 79 01 	lds	r26, 0x0179
     6e2:	b0 91 7a 01 	lds	r27, 0x017A
     6e6:	48 17       	cp	r20, r24
     6e8:	59 07       	cpc	r21, r25
     6ea:	6a 07       	cpc	r22, r26
     6ec:	7b 07       	cpc	r23, r27
     6ee:	40 f0       	brcs	.+16     	; 0x700 <__vector_13+0xdc>
			clear_pin(my_pwm.port, my_pwm.pin);
     6f0:	60 91 72 01 	lds	r22, 0x0172
     6f4:	80 91 70 01 	lds	r24, 0x0170
     6f8:	90 91 71 01 	lds	r25, 0x0171
     6fc:	0e 94 42 01 	call	0x284	; 0x284 <clear_pin>
		}
	}

	if(timer_node_0 > 0) timer_node_0--;
     700:	80 91 6c 01 	lds	r24, 0x016C
     704:	90 91 6d 01 	lds	r25, 0x016D
     708:	a0 91 6e 01 	lds	r26, 0x016E
     70c:	b0 91 6f 01 	lds	r27, 0x016F
     710:	89 2b       	or	r24, r25
     712:	8a 2b       	or	r24, r26
     714:	8b 2b       	or	r24, r27
     716:	99 f0       	breq	.+38     	; 0x73e <__vector_13+0x11a>
     718:	80 91 6c 01 	lds	r24, 0x016C
     71c:	90 91 6d 01 	lds	r25, 0x016D
     720:	a0 91 6e 01 	lds	r26, 0x016E
     724:	b0 91 6f 01 	lds	r27, 0x016F
     728:	01 97       	sbiw	r24, 0x01	; 1
     72a:	a1 09       	sbc	r26, r1
     72c:	b1 09       	sbc	r27, r1
     72e:	80 93 6c 01 	sts	0x016C, r24
     732:	90 93 6d 01 	sts	0x016D, r25
     736:	a0 93 6e 01 	sts	0x016E, r26
     73a:	b0 93 6f 01 	sts	0x016F, r27
	if(timer_node_1 > 0) timer_node_1--;
     73e:	80 91 68 01 	lds	r24, 0x0168
     742:	90 91 69 01 	lds	r25, 0x0169
     746:	a0 91 6a 01 	lds	r26, 0x016A
     74a:	b0 91 6b 01 	lds	r27, 0x016B
     74e:	89 2b       	or	r24, r25
     750:	8a 2b       	or	r24, r26
     752:	8b 2b       	or	r24, r27
     754:	99 f0       	breq	.+38     	; 0x77c <__vector_13+0x158>
     756:	80 91 68 01 	lds	r24, 0x0168
     75a:	90 91 69 01 	lds	r25, 0x0169
     75e:	a0 91 6a 01 	lds	r26, 0x016A
     762:	b0 91 6b 01 	lds	r27, 0x016B
     766:	01 97       	sbiw	r24, 0x01	; 1
     768:	a1 09       	sbc	r26, r1
     76a:	b1 09       	sbc	r27, r1
     76c:	80 93 68 01 	sts	0x0168, r24
     770:	90 93 69 01 	sts	0x0169, r25
     774:	a0 93 6a 01 	sts	0x016A, r26
     778:	b0 93 6b 01 	sts	0x016B, r27
	if(timer_node_2 > 0) timer_node_2--;
     77c:	80 91 64 01 	lds	r24, 0x0164
     780:	90 91 65 01 	lds	r25, 0x0165
     784:	a0 91 66 01 	lds	r26, 0x0166
     788:	b0 91 67 01 	lds	r27, 0x0167
     78c:	89 2b       	or	r24, r25
     78e:	8a 2b       	or	r24, r26
     790:	8b 2b       	or	r24, r27
     792:	99 f0       	breq	.+38     	; 0x7ba <__vector_13+0x196>
     794:	80 91 64 01 	lds	r24, 0x0164
     798:	90 91 65 01 	lds	r25, 0x0165
     79c:	a0 91 66 01 	lds	r26, 0x0166
     7a0:	b0 91 67 01 	lds	r27, 0x0167
     7a4:	01 97       	sbiw	r24, 0x01	; 1
     7a6:	a1 09       	sbc	r26, r1
     7a8:	b1 09       	sbc	r27, r1
     7aa:	80 93 64 01 	sts	0x0164, r24
     7ae:	90 93 65 01 	sts	0x0165, r25
     7b2:	a0 93 66 01 	sts	0x0166, r26
     7b6:	b0 93 67 01 	sts	0x0167, r27
	if(pause_time > 0) pause_time--;
     7ba:	80 91 60 01 	lds	r24, 0x0160
     7be:	90 91 61 01 	lds	r25, 0x0161
     7c2:	a0 91 62 01 	lds	r26, 0x0162
     7c6:	b0 91 63 01 	lds	r27, 0x0163
     7ca:	89 2b       	or	r24, r25
     7cc:	8a 2b       	or	r24, r26
     7ce:	8b 2b       	or	r24, r27
     7d0:	99 f0       	breq	.+38     	; 0x7f8 <__vector_13+0x1d4>
     7d2:	80 91 60 01 	lds	r24, 0x0160
     7d6:	90 91 61 01 	lds	r25, 0x0161
     7da:	a0 91 62 01 	lds	r26, 0x0162
     7de:	b0 91 63 01 	lds	r27, 0x0163
     7e2:	01 97       	sbiw	r24, 0x01	; 1
     7e4:	a1 09       	sbc	r26, r1
     7e6:	b1 09       	sbc	r27, r1
     7e8:	80 93 60 01 	sts	0x0160, r24
     7ec:	90 93 61 01 	sts	0x0161, r25
     7f0:	a0 93 62 01 	sts	0x0162, r26
     7f4:	b0 93 63 01 	sts	0x0163, r27
}
     7f8:	ff 91       	pop	r31
     7fa:	ef 91       	pop	r30
     7fc:	bf 91       	pop	r27
     7fe:	af 91       	pop	r26
     800:	9f 91       	pop	r25
     802:	8f 91       	pop	r24
     804:	7f 91       	pop	r23
     806:	6f 91       	pop	r22
     808:	5f 91       	pop	r21
     80a:	4f 91       	pop	r20
     80c:	3f 91       	pop	r19
     80e:	2f 91       	pop	r18
     810:	0f 90       	pop	r0
     812:	0f be       	out	0x3f, r0	; 63
     814:	0f 90       	pop	r0
     816:	1f 90       	pop	r1
     818:	18 95       	reti

0000081a <init_uart>:
static volatile char uart0_received;
static volatile uint8_t uart0_index;

void init_uart(uint8_t baud)
{
	uart0_sent = 0;
     81a:	10 92 81 01 	sts	0x0181, r1
	uart0_received = 0;
     81e:	10 92 80 01 	sts	0x0180, r1
	uart0_index = 0;
     822:	10 92 7f 01 	sts	0x017F, r1
	uart0_buff[uart0_index] = '\0';
     826:	e0 91 7f 01 	lds	r30, 0x017F
     82a:	f0 e0       	ldi	r31, 0x00	; 0
     82c:	ee 57       	subi	r30, 0x7E	; 126
     82e:	fe 4f       	sbci	r31, 0xFE	; 254
     830:	10 82       	st	Z, r1
	UCSR0B |= (1 << RXEN0 | 1 << TXEN0 | 1 << RXCIE0);
     832:	e1 ec       	ldi	r30, 0xC1	; 193
     834:	f0 e0       	ldi	r31, 0x00	; 0
     836:	90 81       	ld	r25, Z
     838:	98 69       	ori	r25, 0x98	; 152
     83a:	90 83       	st	Z, r25
	UCSR0C |= (1 << UCSZ00 | 1 << UCSZ00);
     83c:	e2 ec       	ldi	r30, 0xC2	; 194
     83e:	f0 e0       	ldi	r31, 0x00	; 0
     840:	90 81       	ld	r25, Z
     842:	92 60       	ori	r25, 0x02	; 2
     844:	90 83       	st	Z, r25
	UBRR0 = baud;
     846:	90 e0       	ldi	r25, 0x00	; 0
     848:	90 93 c5 00 	sts	0x00C5, r25
     84c:	80 93 c4 00 	sts	0x00C4, r24
	
	sei();
     850:	78 94       	sei
     852:	08 95       	ret

00000854 <send_char>:
}

void send_char(char c)
{
	uart0_sent = 0;
     854:	10 92 81 01 	sts	0x0181, r1
	UDR0 = c;
     858:	80 93 c6 00 	sts	0x00C6, r24
	while (!(UCSR0A & (1 << UDRE0)));
     85c:	e0 ec       	ldi	r30, 0xC0	; 192
     85e:	f0 e0       	ldi	r31, 0x00	; 0
     860:	80 81       	ld	r24, Z
     862:	85 ff       	sbrs	r24, 5
     864:	fd cf       	rjmp	.-6      	; 0x860 <send_char+0xc>
}
     866:	08 95       	ret

00000868 <send_string>:

void send_string(char *str)
{
     868:	cf 93       	push	r28
     86a:	df 93       	push	r29
     86c:	ec 01       	movw	r28, r24
	while (*str != '\0') {
     86e:	88 81       	ld	r24, Y
     870:	88 23       	and	r24, r24
     872:	31 f0       	breq	.+12     	; 0x880 <send_string+0x18>
     874:	21 96       	adiw	r28, 0x01	; 1
		send_char(*str);
     876:	0e 94 2a 04 	call	0x854	; 0x854 <send_char>
	while (!(UCSR0A & (1 << UDRE0)));
}

void send_string(char *str)
{
	while (*str != '\0') {
     87a:	89 91       	ld	r24, Y+
     87c:	81 11       	cpse	r24, r1
     87e:	fb cf       	rjmp	.-10     	; 0x876 <send_string+0xe>
		send_char(*str);
		str++;
	}
}
     880:	df 91       	pop	r29
     882:	cf 91       	pop	r28
     884:	08 95       	ret

00000886 <clear_buffer>:
	*dest = '\0';
}

void clear_buffer()
{
	uart0_index = 0;
     886:	10 92 7f 01 	sts	0x017F, r1
	uart0_buff[uart0_index] = '\0';
     88a:	e0 91 7f 01 	lds	r30, 0x017F
     88e:	f0 e0       	ldi	r31, 0x00	; 0
     890:	ee 57       	subi	r30, 0x7E	; 126
     892:	fe 4f       	sbci	r31, 0xFE	; 254
     894:	10 82       	st	Z, r1
     896:	08 95       	ret

00000898 <__vector_18>:
//{
//	uart0_sent = 1;
//}

ISR(USART_RX_vect)
{
     898:	1f 92       	push	r1
     89a:	0f 92       	push	r0
     89c:	0f b6       	in	r0, 0x3f	; 63
     89e:	0f 92       	push	r0
     8a0:	11 24       	eor	r1, r1
     8a2:	2f 93       	push	r18
     8a4:	3f 93       	push	r19
     8a6:	4f 93       	push	r20
     8a8:	5f 93       	push	r21
     8aa:	6f 93       	push	r22
     8ac:	7f 93       	push	r23
     8ae:	8f 93       	push	r24
     8b0:	9f 93       	push	r25
     8b2:	af 93       	push	r26
     8b4:	bf 93       	push	r27
     8b6:	ef 93       	push	r30
     8b8:	ff 93       	push	r31
	char temp;

	temp = UDR0;
     8ba:	80 91 c6 00 	lds	r24, 0x00C6
	if (uart0_index < (UART0_SIZE - 2)) {
     8be:	90 91 7f 01 	lds	r25, 0x017F
     8c2:	9d 3f       	cpi	r25, 0xFD	; 253
     8c4:	d8 f4       	brcc	.+54     	; 0x8fc <__vector_18+0x64>
		/* There is room for more characters. */
		uart0_buff[uart0_index] = temp;
     8c6:	e0 91 7f 01 	lds	r30, 0x017F
     8ca:	f0 e0       	ldi	r31, 0x00	; 0
     8cc:	ee 57       	subi	r30, 0x7E	; 126
     8ce:	fe 4f       	sbci	r31, 0xFE	; 254
     8d0:	80 83       	st	Z, r24
		uart0_buff[uart0_index + 1] = '\0';
     8d2:	e0 91 7f 01 	lds	r30, 0x017F
     8d6:	f0 e0       	ldi	r31, 0x00	; 0
     8d8:	ed 57       	subi	r30, 0x7D	; 125
     8da:	fe 4f       	sbci	r31, 0xFE	; 254
     8dc:	10 82       	st	Z, r1
		uart0_index++;
     8de:	90 91 7f 01 	lds	r25, 0x017F
     8e2:	9f 5f       	subi	r25, 0xFF	; 255
     8e4:	90 93 7f 01 	sts	0x017F, r25
		if (temp == '\0' || temp == '\n' || temp == '\r') {
     8e8:	88 23       	and	r24, r24
     8ea:	21 f0       	breq	.+8      	; 0x8f4 <__vector_18+0x5c>
     8ec:	8a 30       	cpi	r24, 0x0A	; 10
     8ee:	11 f0       	breq	.+4      	; 0x8f4 <__vector_18+0x5c>
     8f0:	8d 30       	cpi	r24, 0x0D	; 13
     8f2:	31 f4       	brne	.+12     	; 0x900 <__stack+0x1>
			uart0_received = 1;
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	80 93 80 01 	sts	0x0180, r24
     8fa:	02 c0       	rjmp	.+4      	; 0x900 <__stack+0x1>
		}
	} else {
		/* Wait for buffer to be cleared. */
		clear_buffer();	
     8fc:	0e 94 43 04 	call	0x886	; 0x886 <clear_buffer>
	}
}
     900:	ff 91       	pop	r31
     902:	ef 91       	pop	r30
     904:	bf 91       	pop	r27
     906:	af 91       	pop	r26
     908:	9f 91       	pop	r25
     90a:	8f 91       	pop	r24
     90c:	7f 91       	pop	r23
     90e:	6f 91       	pop	r22
     910:	5f 91       	pop	r21
     912:	4f 91       	pop	r20
     914:	3f 91       	pop	r19
     916:	2f 91       	pop	r18
     918:	0f 90       	pop	r0
     91a:	0f be       	out	0x3f, r0	; 63
     91c:	0f 90       	pop	r0
     91e:	1f 90       	pop	r1
     920:	18 95       	reti

00000922 <__subsf3>:
     922:	50 58       	subi	r21, 0x80	; 128

00000924 <__addsf3>:
     924:	bb 27       	eor	r27, r27
     926:	aa 27       	eor	r26, r26
     928:	0e d0       	rcall	.+28     	; 0x946 <__addsf3x>
     92a:	4d c1       	rjmp	.+666    	; 0xbc6 <__fp_round>
     92c:	3e d1       	rcall	.+636    	; 0xbaa <__fp_pscA>
     92e:	30 f0       	brcs	.+12     	; 0x93c <__addsf3+0x18>
     930:	43 d1       	rcall	.+646    	; 0xbb8 <__fp_pscB>
     932:	20 f0       	brcs	.+8      	; 0x93c <__addsf3+0x18>
     934:	31 f4       	brne	.+12     	; 0x942 <__addsf3+0x1e>
     936:	9f 3f       	cpi	r25, 0xFF	; 255
     938:	11 f4       	brne	.+4      	; 0x93e <__addsf3+0x1a>
     93a:	1e f4       	brtc	.+6      	; 0x942 <__addsf3+0x1e>
     93c:	33 c1       	rjmp	.+614    	; 0xba4 <__fp_nan>
     93e:	0e f4       	brtc	.+2      	; 0x942 <__addsf3+0x1e>
     940:	e0 95       	com	r30
     942:	e7 fb       	bst	r30, 7
     944:	29 c1       	rjmp	.+594    	; 0xb98 <__fp_inf>

00000946 <__addsf3x>:
     946:	e9 2f       	mov	r30, r25
     948:	4f d1       	rcall	.+670    	; 0xbe8 <__fp_split3>
     94a:	80 f3       	brcs	.-32     	; 0x92c <__addsf3+0x8>
     94c:	ba 17       	cp	r27, r26
     94e:	62 07       	cpc	r22, r18
     950:	73 07       	cpc	r23, r19
     952:	84 07       	cpc	r24, r20
     954:	95 07       	cpc	r25, r21
     956:	18 f0       	brcs	.+6      	; 0x95e <__addsf3x+0x18>
     958:	71 f4       	brne	.+28     	; 0x976 <__addsf3x+0x30>
     95a:	9e f5       	brtc	.+102    	; 0x9c2 <__addsf3x+0x7c>
     95c:	67 c1       	rjmp	.+718    	; 0xc2c <__fp_zero>
     95e:	0e f4       	brtc	.+2      	; 0x962 <__addsf3x+0x1c>
     960:	e0 95       	com	r30
     962:	0b 2e       	mov	r0, r27
     964:	ba 2f       	mov	r27, r26
     966:	a0 2d       	mov	r26, r0
     968:	0b 01       	movw	r0, r22
     96a:	b9 01       	movw	r22, r18
     96c:	90 01       	movw	r18, r0
     96e:	0c 01       	movw	r0, r24
     970:	ca 01       	movw	r24, r20
     972:	a0 01       	movw	r20, r0
     974:	11 24       	eor	r1, r1
     976:	ff 27       	eor	r31, r31
     978:	59 1b       	sub	r21, r25
     97a:	99 f0       	breq	.+38     	; 0x9a2 <__addsf3x+0x5c>
     97c:	59 3f       	cpi	r21, 0xF9	; 249
     97e:	50 f4       	brcc	.+20     	; 0x994 <__addsf3x+0x4e>
     980:	50 3e       	cpi	r21, 0xE0	; 224
     982:	68 f1       	brcs	.+90     	; 0x9de <__addsf3x+0x98>
     984:	1a 16       	cp	r1, r26
     986:	f0 40       	sbci	r31, 0x00	; 0
     988:	a2 2f       	mov	r26, r18
     98a:	23 2f       	mov	r18, r19
     98c:	34 2f       	mov	r19, r20
     98e:	44 27       	eor	r20, r20
     990:	58 5f       	subi	r21, 0xF8	; 248
     992:	f3 cf       	rjmp	.-26     	; 0x97a <__addsf3x+0x34>
     994:	46 95       	lsr	r20
     996:	37 95       	ror	r19
     998:	27 95       	ror	r18
     99a:	a7 95       	ror	r26
     99c:	f0 40       	sbci	r31, 0x00	; 0
     99e:	53 95       	inc	r21
     9a0:	c9 f7       	brne	.-14     	; 0x994 <__addsf3x+0x4e>
     9a2:	7e f4       	brtc	.+30     	; 0x9c2 <__addsf3x+0x7c>
     9a4:	1f 16       	cp	r1, r31
     9a6:	ba 0b       	sbc	r27, r26
     9a8:	62 0b       	sbc	r22, r18
     9aa:	73 0b       	sbc	r23, r19
     9ac:	84 0b       	sbc	r24, r20
     9ae:	ba f0       	brmi	.+46     	; 0x9de <__addsf3x+0x98>
     9b0:	91 50       	subi	r25, 0x01	; 1
     9b2:	a1 f0       	breq	.+40     	; 0x9dc <__addsf3x+0x96>
     9b4:	ff 0f       	add	r31, r31
     9b6:	bb 1f       	adc	r27, r27
     9b8:	66 1f       	adc	r22, r22
     9ba:	77 1f       	adc	r23, r23
     9bc:	88 1f       	adc	r24, r24
     9be:	c2 f7       	brpl	.-16     	; 0x9b0 <__addsf3x+0x6a>
     9c0:	0e c0       	rjmp	.+28     	; 0x9de <__addsf3x+0x98>
     9c2:	ba 0f       	add	r27, r26
     9c4:	62 1f       	adc	r22, r18
     9c6:	73 1f       	adc	r23, r19
     9c8:	84 1f       	adc	r24, r20
     9ca:	48 f4       	brcc	.+18     	; 0x9de <__addsf3x+0x98>
     9cc:	87 95       	ror	r24
     9ce:	77 95       	ror	r23
     9d0:	67 95       	ror	r22
     9d2:	b7 95       	ror	r27
     9d4:	f7 95       	ror	r31
     9d6:	9e 3f       	cpi	r25, 0xFE	; 254
     9d8:	08 f0       	brcs	.+2      	; 0x9dc <__addsf3x+0x96>
     9da:	b3 cf       	rjmp	.-154    	; 0x942 <__addsf3+0x1e>
     9dc:	93 95       	inc	r25
     9de:	88 0f       	add	r24, r24
     9e0:	08 f0       	brcs	.+2      	; 0x9e4 <__addsf3x+0x9e>
     9e2:	99 27       	eor	r25, r25
     9e4:	ee 0f       	add	r30, r30
     9e6:	97 95       	ror	r25
     9e8:	87 95       	ror	r24
     9ea:	08 95       	ret

000009ec <__divsf3>:
     9ec:	0c d0       	rcall	.+24     	; 0xa06 <__divsf3x>
     9ee:	eb c0       	rjmp	.+470    	; 0xbc6 <__fp_round>
     9f0:	e3 d0       	rcall	.+454    	; 0xbb8 <__fp_pscB>
     9f2:	40 f0       	brcs	.+16     	; 0xa04 <__divsf3+0x18>
     9f4:	da d0       	rcall	.+436    	; 0xbaa <__fp_pscA>
     9f6:	30 f0       	brcs	.+12     	; 0xa04 <__divsf3+0x18>
     9f8:	21 f4       	brne	.+8      	; 0xa02 <__divsf3+0x16>
     9fa:	5f 3f       	cpi	r21, 0xFF	; 255
     9fc:	19 f0       	breq	.+6      	; 0xa04 <__divsf3+0x18>
     9fe:	cc c0       	rjmp	.+408    	; 0xb98 <__fp_inf>
     a00:	51 11       	cpse	r21, r1
     a02:	15 c1       	rjmp	.+554    	; 0xc2e <__fp_szero>
     a04:	cf c0       	rjmp	.+414    	; 0xba4 <__fp_nan>

00000a06 <__divsf3x>:
     a06:	f0 d0       	rcall	.+480    	; 0xbe8 <__fp_split3>
     a08:	98 f3       	brcs	.-26     	; 0x9f0 <__divsf3+0x4>

00000a0a <__divsf3_pse>:
     a0a:	99 23       	and	r25, r25
     a0c:	c9 f3       	breq	.-14     	; 0xa00 <__divsf3+0x14>
     a0e:	55 23       	and	r21, r21
     a10:	b1 f3       	breq	.-20     	; 0x9fe <__divsf3+0x12>
     a12:	95 1b       	sub	r25, r21
     a14:	55 0b       	sbc	r21, r21
     a16:	bb 27       	eor	r27, r27
     a18:	aa 27       	eor	r26, r26
     a1a:	62 17       	cp	r22, r18
     a1c:	73 07       	cpc	r23, r19
     a1e:	84 07       	cpc	r24, r20
     a20:	38 f0       	brcs	.+14     	; 0xa30 <__divsf3_pse+0x26>
     a22:	9f 5f       	subi	r25, 0xFF	; 255
     a24:	5f 4f       	sbci	r21, 0xFF	; 255
     a26:	22 0f       	add	r18, r18
     a28:	33 1f       	adc	r19, r19
     a2a:	44 1f       	adc	r20, r20
     a2c:	aa 1f       	adc	r26, r26
     a2e:	a9 f3       	breq	.-22     	; 0xa1a <__divsf3_pse+0x10>
     a30:	33 d0       	rcall	.+102    	; 0xa98 <__divsf3_pse+0x8e>
     a32:	0e 2e       	mov	r0, r30
     a34:	3a f0       	brmi	.+14     	; 0xa44 <__divsf3_pse+0x3a>
     a36:	e0 e8       	ldi	r30, 0x80	; 128
     a38:	30 d0       	rcall	.+96     	; 0xa9a <__divsf3_pse+0x90>
     a3a:	91 50       	subi	r25, 0x01	; 1
     a3c:	50 40       	sbci	r21, 0x00	; 0
     a3e:	e6 95       	lsr	r30
     a40:	00 1c       	adc	r0, r0
     a42:	ca f7       	brpl	.-14     	; 0xa36 <__divsf3_pse+0x2c>
     a44:	29 d0       	rcall	.+82     	; 0xa98 <__divsf3_pse+0x8e>
     a46:	fe 2f       	mov	r31, r30
     a48:	27 d0       	rcall	.+78     	; 0xa98 <__divsf3_pse+0x8e>
     a4a:	66 0f       	add	r22, r22
     a4c:	77 1f       	adc	r23, r23
     a4e:	88 1f       	adc	r24, r24
     a50:	bb 1f       	adc	r27, r27
     a52:	26 17       	cp	r18, r22
     a54:	37 07       	cpc	r19, r23
     a56:	48 07       	cpc	r20, r24
     a58:	ab 07       	cpc	r26, r27
     a5a:	b0 e8       	ldi	r27, 0x80	; 128
     a5c:	09 f0       	breq	.+2      	; 0xa60 <__divsf3_pse+0x56>
     a5e:	bb 0b       	sbc	r27, r27
     a60:	80 2d       	mov	r24, r0
     a62:	bf 01       	movw	r22, r30
     a64:	ff 27       	eor	r31, r31
     a66:	93 58       	subi	r25, 0x83	; 131
     a68:	5f 4f       	sbci	r21, 0xFF	; 255
     a6a:	2a f0       	brmi	.+10     	; 0xa76 <__divsf3_pse+0x6c>
     a6c:	9e 3f       	cpi	r25, 0xFE	; 254
     a6e:	51 05       	cpc	r21, r1
     a70:	68 f0       	brcs	.+26     	; 0xa8c <__divsf3_pse+0x82>
     a72:	92 c0       	rjmp	.+292    	; 0xb98 <__fp_inf>
     a74:	dc c0       	rjmp	.+440    	; 0xc2e <__fp_szero>
     a76:	5f 3f       	cpi	r21, 0xFF	; 255
     a78:	ec f3       	brlt	.-6      	; 0xa74 <__divsf3_pse+0x6a>
     a7a:	98 3e       	cpi	r25, 0xE8	; 232
     a7c:	dc f3       	brlt	.-10     	; 0xa74 <__divsf3_pse+0x6a>
     a7e:	86 95       	lsr	r24
     a80:	77 95       	ror	r23
     a82:	67 95       	ror	r22
     a84:	b7 95       	ror	r27
     a86:	f7 95       	ror	r31
     a88:	9f 5f       	subi	r25, 0xFF	; 255
     a8a:	c9 f7       	brne	.-14     	; 0xa7e <__divsf3_pse+0x74>
     a8c:	88 0f       	add	r24, r24
     a8e:	91 1d       	adc	r25, r1
     a90:	96 95       	lsr	r25
     a92:	87 95       	ror	r24
     a94:	97 f9       	bld	r25, 7
     a96:	08 95       	ret
     a98:	e1 e0       	ldi	r30, 0x01	; 1
     a9a:	66 0f       	add	r22, r22
     a9c:	77 1f       	adc	r23, r23
     a9e:	88 1f       	adc	r24, r24
     aa0:	bb 1f       	adc	r27, r27
     aa2:	62 17       	cp	r22, r18
     aa4:	73 07       	cpc	r23, r19
     aa6:	84 07       	cpc	r24, r20
     aa8:	ba 07       	cpc	r27, r26
     aaa:	20 f0       	brcs	.+8      	; 0xab4 <__divsf3_pse+0xaa>
     aac:	62 1b       	sub	r22, r18
     aae:	73 0b       	sbc	r23, r19
     ab0:	84 0b       	sbc	r24, r20
     ab2:	ba 0b       	sbc	r27, r26
     ab4:	ee 1f       	adc	r30, r30
     ab6:	88 f7       	brcc	.-30     	; 0xa9a <__divsf3_pse+0x90>
     ab8:	e0 95       	com	r30
     aba:	08 95       	ret

00000abc <__fixsfsi>:
     abc:	04 d0       	rcall	.+8      	; 0xac6 <__fixunssfsi>
     abe:	68 94       	set
     ac0:	b1 11       	cpse	r27, r1
     ac2:	b5 c0       	rjmp	.+362    	; 0xc2e <__fp_szero>
     ac4:	08 95       	ret

00000ac6 <__fixunssfsi>:
     ac6:	98 d0       	rcall	.+304    	; 0xbf8 <__fp_splitA>
     ac8:	88 f0       	brcs	.+34     	; 0xaec <__fixunssfsi+0x26>
     aca:	9f 57       	subi	r25, 0x7F	; 127
     acc:	90 f0       	brcs	.+36     	; 0xaf2 <__fixunssfsi+0x2c>
     ace:	b9 2f       	mov	r27, r25
     ad0:	99 27       	eor	r25, r25
     ad2:	b7 51       	subi	r27, 0x17	; 23
     ad4:	a0 f0       	brcs	.+40     	; 0xafe <__fixunssfsi+0x38>
     ad6:	d1 f0       	breq	.+52     	; 0xb0c <__fixunssfsi+0x46>
     ad8:	66 0f       	add	r22, r22
     ada:	77 1f       	adc	r23, r23
     adc:	88 1f       	adc	r24, r24
     ade:	99 1f       	adc	r25, r25
     ae0:	1a f0       	brmi	.+6      	; 0xae8 <__fixunssfsi+0x22>
     ae2:	ba 95       	dec	r27
     ae4:	c9 f7       	brne	.-14     	; 0xad8 <__fixunssfsi+0x12>
     ae6:	12 c0       	rjmp	.+36     	; 0xb0c <__fixunssfsi+0x46>
     ae8:	b1 30       	cpi	r27, 0x01	; 1
     aea:	81 f0       	breq	.+32     	; 0xb0c <__fixunssfsi+0x46>
     aec:	9f d0       	rcall	.+318    	; 0xc2c <__fp_zero>
     aee:	b1 e0       	ldi	r27, 0x01	; 1
     af0:	08 95       	ret
     af2:	9c c0       	rjmp	.+312    	; 0xc2c <__fp_zero>
     af4:	67 2f       	mov	r22, r23
     af6:	78 2f       	mov	r23, r24
     af8:	88 27       	eor	r24, r24
     afa:	b8 5f       	subi	r27, 0xF8	; 248
     afc:	39 f0       	breq	.+14     	; 0xb0c <__fixunssfsi+0x46>
     afe:	b9 3f       	cpi	r27, 0xF9	; 249
     b00:	cc f3       	brlt	.-14     	; 0xaf4 <__fixunssfsi+0x2e>
     b02:	86 95       	lsr	r24
     b04:	77 95       	ror	r23
     b06:	67 95       	ror	r22
     b08:	b3 95       	inc	r27
     b0a:	d9 f7       	brne	.-10     	; 0xb02 <__fixunssfsi+0x3c>
     b0c:	3e f4       	brtc	.+14     	; 0xb1c <__fixunssfsi+0x56>
     b0e:	90 95       	com	r25
     b10:	80 95       	com	r24
     b12:	70 95       	com	r23
     b14:	61 95       	neg	r22
     b16:	7f 4f       	sbci	r23, 0xFF	; 255
     b18:	8f 4f       	sbci	r24, 0xFF	; 255
     b1a:	9f 4f       	sbci	r25, 0xFF	; 255
     b1c:	08 95       	ret

00000b1e <__floatunsisf>:
     b1e:	e8 94       	clt
     b20:	09 c0       	rjmp	.+18     	; 0xb34 <__floatsisf+0x12>

00000b22 <__floatsisf>:
     b22:	97 fb       	bst	r25, 7
     b24:	3e f4       	brtc	.+14     	; 0xb34 <__floatsisf+0x12>
     b26:	90 95       	com	r25
     b28:	80 95       	com	r24
     b2a:	70 95       	com	r23
     b2c:	61 95       	neg	r22
     b2e:	7f 4f       	sbci	r23, 0xFF	; 255
     b30:	8f 4f       	sbci	r24, 0xFF	; 255
     b32:	9f 4f       	sbci	r25, 0xFF	; 255
     b34:	99 23       	and	r25, r25
     b36:	a9 f0       	breq	.+42     	; 0xb62 <__floatsisf+0x40>
     b38:	f9 2f       	mov	r31, r25
     b3a:	96 e9       	ldi	r25, 0x96	; 150
     b3c:	bb 27       	eor	r27, r27
     b3e:	93 95       	inc	r25
     b40:	f6 95       	lsr	r31
     b42:	87 95       	ror	r24
     b44:	77 95       	ror	r23
     b46:	67 95       	ror	r22
     b48:	b7 95       	ror	r27
     b4a:	f1 11       	cpse	r31, r1
     b4c:	f8 cf       	rjmp	.-16     	; 0xb3e <__floatsisf+0x1c>
     b4e:	fa f4       	brpl	.+62     	; 0xb8e <__floatsisf+0x6c>
     b50:	bb 0f       	add	r27, r27
     b52:	11 f4       	brne	.+4      	; 0xb58 <__floatsisf+0x36>
     b54:	60 ff       	sbrs	r22, 0
     b56:	1b c0       	rjmp	.+54     	; 0xb8e <__floatsisf+0x6c>
     b58:	6f 5f       	subi	r22, 0xFF	; 255
     b5a:	7f 4f       	sbci	r23, 0xFF	; 255
     b5c:	8f 4f       	sbci	r24, 0xFF	; 255
     b5e:	9f 4f       	sbci	r25, 0xFF	; 255
     b60:	16 c0       	rjmp	.+44     	; 0xb8e <__floatsisf+0x6c>
     b62:	88 23       	and	r24, r24
     b64:	11 f0       	breq	.+4      	; 0xb6a <__floatsisf+0x48>
     b66:	96 e9       	ldi	r25, 0x96	; 150
     b68:	11 c0       	rjmp	.+34     	; 0xb8c <__floatsisf+0x6a>
     b6a:	77 23       	and	r23, r23
     b6c:	21 f0       	breq	.+8      	; 0xb76 <__floatsisf+0x54>
     b6e:	9e e8       	ldi	r25, 0x8E	; 142
     b70:	87 2f       	mov	r24, r23
     b72:	76 2f       	mov	r23, r22
     b74:	05 c0       	rjmp	.+10     	; 0xb80 <__floatsisf+0x5e>
     b76:	66 23       	and	r22, r22
     b78:	71 f0       	breq	.+28     	; 0xb96 <__floatsisf+0x74>
     b7a:	96 e8       	ldi	r25, 0x86	; 134
     b7c:	86 2f       	mov	r24, r22
     b7e:	70 e0       	ldi	r23, 0x00	; 0
     b80:	60 e0       	ldi	r22, 0x00	; 0
     b82:	2a f0       	brmi	.+10     	; 0xb8e <__floatsisf+0x6c>
     b84:	9a 95       	dec	r25
     b86:	66 0f       	add	r22, r22
     b88:	77 1f       	adc	r23, r23
     b8a:	88 1f       	adc	r24, r24
     b8c:	da f7       	brpl	.-10     	; 0xb84 <__floatsisf+0x62>
     b8e:	88 0f       	add	r24, r24
     b90:	96 95       	lsr	r25
     b92:	87 95       	ror	r24
     b94:	97 f9       	bld	r25, 7
     b96:	08 95       	ret

00000b98 <__fp_inf>:
     b98:	97 f9       	bld	r25, 7
     b9a:	9f 67       	ori	r25, 0x7F	; 127
     b9c:	80 e8       	ldi	r24, 0x80	; 128
     b9e:	70 e0       	ldi	r23, 0x00	; 0
     ba0:	60 e0       	ldi	r22, 0x00	; 0
     ba2:	08 95       	ret

00000ba4 <__fp_nan>:
     ba4:	9f ef       	ldi	r25, 0xFF	; 255
     ba6:	80 ec       	ldi	r24, 0xC0	; 192
     ba8:	08 95       	ret

00000baa <__fp_pscA>:
     baa:	00 24       	eor	r0, r0
     bac:	0a 94       	dec	r0
     bae:	16 16       	cp	r1, r22
     bb0:	17 06       	cpc	r1, r23
     bb2:	18 06       	cpc	r1, r24
     bb4:	09 06       	cpc	r0, r25
     bb6:	08 95       	ret

00000bb8 <__fp_pscB>:
     bb8:	00 24       	eor	r0, r0
     bba:	0a 94       	dec	r0
     bbc:	12 16       	cp	r1, r18
     bbe:	13 06       	cpc	r1, r19
     bc0:	14 06       	cpc	r1, r20
     bc2:	05 06       	cpc	r0, r21
     bc4:	08 95       	ret

00000bc6 <__fp_round>:
     bc6:	09 2e       	mov	r0, r25
     bc8:	03 94       	inc	r0
     bca:	00 0c       	add	r0, r0
     bcc:	11 f4       	brne	.+4      	; 0xbd2 <__fp_round+0xc>
     bce:	88 23       	and	r24, r24
     bd0:	52 f0       	brmi	.+20     	; 0xbe6 <__fp_round+0x20>
     bd2:	bb 0f       	add	r27, r27
     bd4:	40 f4       	brcc	.+16     	; 0xbe6 <__fp_round+0x20>
     bd6:	bf 2b       	or	r27, r31
     bd8:	11 f4       	brne	.+4      	; 0xbde <__fp_round+0x18>
     bda:	60 ff       	sbrs	r22, 0
     bdc:	04 c0       	rjmp	.+8      	; 0xbe6 <__fp_round+0x20>
     bde:	6f 5f       	subi	r22, 0xFF	; 255
     be0:	7f 4f       	sbci	r23, 0xFF	; 255
     be2:	8f 4f       	sbci	r24, 0xFF	; 255
     be4:	9f 4f       	sbci	r25, 0xFF	; 255
     be6:	08 95       	ret

00000be8 <__fp_split3>:
     be8:	57 fd       	sbrc	r21, 7
     bea:	90 58       	subi	r25, 0x80	; 128
     bec:	44 0f       	add	r20, r20
     bee:	55 1f       	adc	r21, r21
     bf0:	59 f0       	breq	.+22     	; 0xc08 <__fp_splitA+0x10>
     bf2:	5f 3f       	cpi	r21, 0xFF	; 255
     bf4:	71 f0       	breq	.+28     	; 0xc12 <__fp_splitA+0x1a>
     bf6:	47 95       	ror	r20

00000bf8 <__fp_splitA>:
     bf8:	88 0f       	add	r24, r24
     bfa:	97 fb       	bst	r25, 7
     bfc:	99 1f       	adc	r25, r25
     bfe:	61 f0       	breq	.+24     	; 0xc18 <__fp_splitA+0x20>
     c00:	9f 3f       	cpi	r25, 0xFF	; 255
     c02:	79 f0       	breq	.+30     	; 0xc22 <__fp_splitA+0x2a>
     c04:	87 95       	ror	r24
     c06:	08 95       	ret
     c08:	12 16       	cp	r1, r18
     c0a:	13 06       	cpc	r1, r19
     c0c:	14 06       	cpc	r1, r20
     c0e:	55 1f       	adc	r21, r21
     c10:	f2 cf       	rjmp	.-28     	; 0xbf6 <__fp_split3+0xe>
     c12:	46 95       	lsr	r20
     c14:	f1 df       	rcall	.-30     	; 0xbf8 <__fp_splitA>
     c16:	08 c0       	rjmp	.+16     	; 0xc28 <__fp_splitA+0x30>
     c18:	16 16       	cp	r1, r22
     c1a:	17 06       	cpc	r1, r23
     c1c:	18 06       	cpc	r1, r24
     c1e:	99 1f       	adc	r25, r25
     c20:	f1 cf       	rjmp	.-30     	; 0xc04 <__fp_splitA+0xc>
     c22:	86 95       	lsr	r24
     c24:	71 05       	cpc	r23, r1
     c26:	61 05       	cpc	r22, r1
     c28:	08 94       	sec
     c2a:	08 95       	ret

00000c2c <__fp_zero>:
     c2c:	e8 94       	clt

00000c2e <__fp_szero>:
     c2e:	bb 27       	eor	r27, r27
     c30:	66 27       	eor	r22, r22
     c32:	77 27       	eor	r23, r23
     c34:	cb 01       	movw	r24, r22
     c36:	97 f9       	bld	r25, 7
     c38:	08 95       	ret

00000c3a <__mulsf3>:
     c3a:	0b d0       	rcall	.+22     	; 0xc52 <__mulsf3x>
     c3c:	c4 cf       	rjmp	.-120    	; 0xbc6 <__fp_round>
     c3e:	b5 df       	rcall	.-150    	; 0xbaa <__fp_pscA>
     c40:	28 f0       	brcs	.+10     	; 0xc4c <__mulsf3+0x12>
     c42:	ba df       	rcall	.-140    	; 0xbb8 <__fp_pscB>
     c44:	18 f0       	brcs	.+6      	; 0xc4c <__mulsf3+0x12>
     c46:	95 23       	and	r25, r21
     c48:	09 f0       	breq	.+2      	; 0xc4c <__mulsf3+0x12>
     c4a:	a6 cf       	rjmp	.-180    	; 0xb98 <__fp_inf>
     c4c:	ab cf       	rjmp	.-170    	; 0xba4 <__fp_nan>
     c4e:	11 24       	eor	r1, r1
     c50:	ee cf       	rjmp	.-36     	; 0xc2e <__fp_szero>

00000c52 <__mulsf3x>:
     c52:	ca df       	rcall	.-108    	; 0xbe8 <__fp_split3>
     c54:	a0 f3       	brcs	.-24     	; 0xc3e <__mulsf3+0x4>

00000c56 <__mulsf3_pse>:
     c56:	95 9f       	mul	r25, r21
     c58:	d1 f3       	breq	.-12     	; 0xc4e <__mulsf3+0x14>
     c5a:	95 0f       	add	r25, r21
     c5c:	50 e0       	ldi	r21, 0x00	; 0
     c5e:	55 1f       	adc	r21, r21
     c60:	62 9f       	mul	r22, r18
     c62:	f0 01       	movw	r30, r0
     c64:	72 9f       	mul	r23, r18
     c66:	bb 27       	eor	r27, r27
     c68:	f0 0d       	add	r31, r0
     c6a:	b1 1d       	adc	r27, r1
     c6c:	63 9f       	mul	r22, r19
     c6e:	aa 27       	eor	r26, r26
     c70:	f0 0d       	add	r31, r0
     c72:	b1 1d       	adc	r27, r1
     c74:	aa 1f       	adc	r26, r26
     c76:	64 9f       	mul	r22, r20
     c78:	66 27       	eor	r22, r22
     c7a:	b0 0d       	add	r27, r0
     c7c:	a1 1d       	adc	r26, r1
     c7e:	66 1f       	adc	r22, r22
     c80:	82 9f       	mul	r24, r18
     c82:	22 27       	eor	r18, r18
     c84:	b0 0d       	add	r27, r0
     c86:	a1 1d       	adc	r26, r1
     c88:	62 1f       	adc	r22, r18
     c8a:	73 9f       	mul	r23, r19
     c8c:	b0 0d       	add	r27, r0
     c8e:	a1 1d       	adc	r26, r1
     c90:	62 1f       	adc	r22, r18
     c92:	83 9f       	mul	r24, r19
     c94:	a0 0d       	add	r26, r0
     c96:	61 1d       	adc	r22, r1
     c98:	22 1f       	adc	r18, r18
     c9a:	74 9f       	mul	r23, r20
     c9c:	33 27       	eor	r19, r19
     c9e:	a0 0d       	add	r26, r0
     ca0:	61 1d       	adc	r22, r1
     ca2:	23 1f       	adc	r18, r19
     ca4:	84 9f       	mul	r24, r20
     ca6:	60 0d       	add	r22, r0
     ca8:	21 1d       	adc	r18, r1
     caa:	82 2f       	mov	r24, r18
     cac:	76 2f       	mov	r23, r22
     cae:	6a 2f       	mov	r22, r26
     cb0:	11 24       	eor	r1, r1
     cb2:	9f 57       	subi	r25, 0x7F	; 127
     cb4:	50 40       	sbci	r21, 0x00	; 0
     cb6:	8a f0       	brmi	.+34     	; 0xcda <__mulsf3_pse+0x84>
     cb8:	e1 f0       	breq	.+56     	; 0xcf2 <__mulsf3_pse+0x9c>
     cba:	88 23       	and	r24, r24
     cbc:	4a f0       	brmi	.+18     	; 0xcd0 <__mulsf3_pse+0x7a>
     cbe:	ee 0f       	add	r30, r30
     cc0:	ff 1f       	adc	r31, r31
     cc2:	bb 1f       	adc	r27, r27
     cc4:	66 1f       	adc	r22, r22
     cc6:	77 1f       	adc	r23, r23
     cc8:	88 1f       	adc	r24, r24
     cca:	91 50       	subi	r25, 0x01	; 1
     ccc:	50 40       	sbci	r21, 0x00	; 0
     cce:	a9 f7       	brne	.-22     	; 0xcba <__mulsf3_pse+0x64>
     cd0:	9e 3f       	cpi	r25, 0xFE	; 254
     cd2:	51 05       	cpc	r21, r1
     cd4:	70 f0       	brcs	.+28     	; 0xcf2 <__mulsf3_pse+0x9c>
     cd6:	60 cf       	rjmp	.-320    	; 0xb98 <__fp_inf>
     cd8:	aa cf       	rjmp	.-172    	; 0xc2e <__fp_szero>
     cda:	5f 3f       	cpi	r21, 0xFF	; 255
     cdc:	ec f3       	brlt	.-6      	; 0xcd8 <__mulsf3_pse+0x82>
     cde:	98 3e       	cpi	r25, 0xE8	; 232
     ce0:	dc f3       	brlt	.-10     	; 0xcd8 <__mulsf3_pse+0x82>
     ce2:	86 95       	lsr	r24
     ce4:	77 95       	ror	r23
     ce6:	67 95       	ror	r22
     ce8:	b7 95       	ror	r27
     cea:	f7 95       	ror	r31
     cec:	e7 95       	ror	r30
     cee:	9f 5f       	subi	r25, 0xFF	; 255
     cf0:	c1 f7       	brne	.-16     	; 0xce2 <__mulsf3_pse+0x8c>
     cf2:	fe 2b       	or	r31, r30
     cf4:	88 0f       	add	r24, r24
     cf6:	91 1d       	adc	r25, r1
     cf8:	96 95       	lsr	r25
     cfa:	87 95       	ror	r24
     cfc:	97 f9       	bld	r25, 7
     cfe:	08 95       	ret

00000d00 <sprintf>:
     d00:	ae e0       	ldi	r26, 0x0E	; 14
     d02:	b0 e0       	ldi	r27, 0x00	; 0
     d04:	e6 e8       	ldi	r30, 0x86	; 134
     d06:	f6 e0       	ldi	r31, 0x06	; 6
     d08:	0c 94 28 09 	jmp	0x1250	; 0x1250 <__prologue_saves__+0x1c>
     d0c:	0d 89       	ldd	r16, Y+21	; 0x15
     d0e:	1e 89       	ldd	r17, Y+22	; 0x16
     d10:	86 e0       	ldi	r24, 0x06	; 6
     d12:	8c 83       	std	Y+4, r24	; 0x04
     d14:	1a 83       	std	Y+2, r17	; 0x02
     d16:	09 83       	std	Y+1, r16	; 0x01
     d18:	8f ef       	ldi	r24, 0xFF	; 255
     d1a:	9f e7       	ldi	r25, 0x7F	; 127
     d1c:	9e 83       	std	Y+6, r25	; 0x06
     d1e:	8d 83       	std	Y+5, r24	; 0x05
     d20:	ae 01       	movw	r20, r28
     d22:	47 5e       	subi	r20, 0xE7	; 231
     d24:	5f 4f       	sbci	r21, 0xFF	; 255
     d26:	6f 89       	ldd	r22, Y+23	; 0x17
     d28:	78 8d       	ldd	r23, Y+24	; 0x18
     d2a:	ce 01       	movw	r24, r28
     d2c:	01 96       	adiw	r24, 0x01	; 1
     d2e:	0e 94 a2 06 	call	0xd44	; 0xd44 <vfprintf>
     d32:	ef 81       	ldd	r30, Y+7	; 0x07
     d34:	f8 85       	ldd	r31, Y+8	; 0x08
     d36:	e0 0f       	add	r30, r16
     d38:	f1 1f       	adc	r31, r17
     d3a:	10 82       	st	Z, r1
     d3c:	2e 96       	adiw	r28, 0x0e	; 14
     d3e:	e4 e0       	ldi	r30, 0x04	; 4
     d40:	0c 94 44 09 	jmp	0x1288	; 0x1288 <__epilogue_restores__+0x1c>

00000d44 <vfprintf>:
     d44:	ac e0       	ldi	r26, 0x0C	; 12
     d46:	b0 e0       	ldi	r27, 0x00	; 0
     d48:	e8 ea       	ldi	r30, 0xA8	; 168
     d4a:	f6 e0       	ldi	r31, 0x06	; 6
     d4c:	0c 94 1a 09 	jmp	0x1234	; 0x1234 <__prologue_saves__>
     d50:	7c 01       	movw	r14, r24
     d52:	6b 01       	movw	r12, r22
     d54:	8a 01       	movw	r16, r20
     d56:	fc 01       	movw	r30, r24
     d58:	17 82       	std	Z+7, r1	; 0x07
     d5a:	16 82       	std	Z+6, r1	; 0x06
     d5c:	83 81       	ldd	r24, Z+3	; 0x03
     d5e:	81 ff       	sbrs	r24, 1
     d60:	bd c1       	rjmp	.+890    	; 0x10dc <vfprintf+0x398>
     d62:	ce 01       	movw	r24, r28
     d64:	01 96       	adiw	r24, 0x01	; 1
     d66:	4c 01       	movw	r8, r24
     d68:	f7 01       	movw	r30, r14
     d6a:	93 81       	ldd	r25, Z+3	; 0x03
     d6c:	f6 01       	movw	r30, r12
     d6e:	93 fd       	sbrc	r25, 3
     d70:	85 91       	lpm	r24, Z+
     d72:	93 ff       	sbrs	r25, 3
     d74:	81 91       	ld	r24, Z+
     d76:	6f 01       	movw	r12, r30
     d78:	88 23       	and	r24, r24
     d7a:	09 f4       	brne	.+2      	; 0xd7e <vfprintf+0x3a>
     d7c:	ab c1       	rjmp	.+854    	; 0x10d4 <vfprintf+0x390>
     d7e:	85 32       	cpi	r24, 0x25	; 37
     d80:	39 f4       	brne	.+14     	; 0xd90 <vfprintf+0x4c>
     d82:	93 fd       	sbrc	r25, 3
     d84:	85 91       	lpm	r24, Z+
     d86:	93 ff       	sbrs	r25, 3
     d88:	81 91       	ld	r24, Z+
     d8a:	6f 01       	movw	r12, r30
     d8c:	85 32       	cpi	r24, 0x25	; 37
     d8e:	29 f4       	brne	.+10     	; 0xd9a <vfprintf+0x56>
     d90:	b7 01       	movw	r22, r14
     d92:	90 e0       	ldi	r25, 0x00	; 0
     d94:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
     d98:	e7 cf       	rjmp	.-50     	; 0xd68 <vfprintf+0x24>
     d9a:	51 2c       	mov	r5, r1
     d9c:	31 2c       	mov	r3, r1
     d9e:	20 e0       	ldi	r18, 0x00	; 0
     da0:	20 32       	cpi	r18, 0x20	; 32
     da2:	a0 f4       	brcc	.+40     	; 0xdcc <vfprintf+0x88>
     da4:	8b 32       	cpi	r24, 0x2B	; 43
     da6:	69 f0       	breq	.+26     	; 0xdc2 <vfprintf+0x7e>
     da8:	30 f4       	brcc	.+12     	; 0xdb6 <vfprintf+0x72>
     daa:	80 32       	cpi	r24, 0x20	; 32
     dac:	59 f0       	breq	.+22     	; 0xdc4 <vfprintf+0x80>
     dae:	83 32       	cpi	r24, 0x23	; 35
     db0:	69 f4       	brne	.+26     	; 0xdcc <vfprintf+0x88>
     db2:	20 61       	ori	r18, 0x10	; 16
     db4:	2c c0       	rjmp	.+88     	; 0xe0e <vfprintf+0xca>
     db6:	8d 32       	cpi	r24, 0x2D	; 45
     db8:	39 f0       	breq	.+14     	; 0xdc8 <vfprintf+0x84>
     dba:	80 33       	cpi	r24, 0x30	; 48
     dbc:	39 f4       	brne	.+14     	; 0xdcc <vfprintf+0x88>
     dbe:	21 60       	ori	r18, 0x01	; 1
     dc0:	26 c0       	rjmp	.+76     	; 0xe0e <vfprintf+0xca>
     dc2:	22 60       	ori	r18, 0x02	; 2
     dc4:	24 60       	ori	r18, 0x04	; 4
     dc6:	23 c0       	rjmp	.+70     	; 0xe0e <vfprintf+0xca>
     dc8:	28 60       	ori	r18, 0x08	; 8
     dca:	21 c0       	rjmp	.+66     	; 0xe0e <vfprintf+0xca>
     dcc:	27 fd       	sbrc	r18, 7
     dce:	27 c0       	rjmp	.+78     	; 0xe1e <vfprintf+0xda>
     dd0:	30 ed       	ldi	r19, 0xD0	; 208
     dd2:	38 0f       	add	r19, r24
     dd4:	3a 30       	cpi	r19, 0x0A	; 10
     dd6:	78 f4       	brcc	.+30     	; 0xdf6 <vfprintf+0xb2>
     dd8:	26 ff       	sbrs	r18, 6
     dda:	06 c0       	rjmp	.+12     	; 0xde8 <vfprintf+0xa4>
     ddc:	fa e0       	ldi	r31, 0x0A	; 10
     dde:	5f 9e       	mul	r5, r31
     de0:	30 0d       	add	r19, r0
     de2:	11 24       	eor	r1, r1
     de4:	53 2e       	mov	r5, r19
     de6:	13 c0       	rjmp	.+38     	; 0xe0e <vfprintf+0xca>
     de8:	8a e0       	ldi	r24, 0x0A	; 10
     dea:	38 9e       	mul	r3, r24
     dec:	30 0d       	add	r19, r0
     dee:	11 24       	eor	r1, r1
     df0:	33 2e       	mov	r3, r19
     df2:	20 62       	ori	r18, 0x20	; 32
     df4:	0c c0       	rjmp	.+24     	; 0xe0e <vfprintf+0xca>
     df6:	8e 32       	cpi	r24, 0x2E	; 46
     df8:	21 f4       	brne	.+8      	; 0xe02 <vfprintf+0xbe>
     dfa:	26 fd       	sbrc	r18, 6
     dfc:	6b c1       	rjmp	.+726    	; 0x10d4 <vfprintf+0x390>
     dfe:	20 64       	ori	r18, 0x40	; 64
     e00:	06 c0       	rjmp	.+12     	; 0xe0e <vfprintf+0xca>
     e02:	8c 36       	cpi	r24, 0x6C	; 108
     e04:	11 f4       	brne	.+4      	; 0xe0a <vfprintf+0xc6>
     e06:	20 68       	ori	r18, 0x80	; 128
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <vfprintf+0xca>
     e0a:	88 36       	cpi	r24, 0x68	; 104
     e0c:	41 f4       	brne	.+16     	; 0xe1e <vfprintf+0xda>
     e0e:	f6 01       	movw	r30, r12
     e10:	93 fd       	sbrc	r25, 3
     e12:	85 91       	lpm	r24, Z+
     e14:	93 ff       	sbrs	r25, 3
     e16:	81 91       	ld	r24, Z+
     e18:	6f 01       	movw	r12, r30
     e1a:	81 11       	cpse	r24, r1
     e1c:	c1 cf       	rjmp	.-126    	; 0xda0 <vfprintf+0x5c>
     e1e:	98 2f       	mov	r25, r24
     e20:	9f 7d       	andi	r25, 0xDF	; 223
     e22:	95 54       	subi	r25, 0x45	; 69
     e24:	93 30       	cpi	r25, 0x03	; 3
     e26:	28 f4       	brcc	.+10     	; 0xe32 <vfprintf+0xee>
     e28:	0c 5f       	subi	r16, 0xFC	; 252
     e2a:	1f 4f       	sbci	r17, 0xFF	; 255
     e2c:	ff e3       	ldi	r31, 0x3F	; 63
     e2e:	f9 83       	std	Y+1, r31	; 0x01
     e30:	0d c0       	rjmp	.+26     	; 0xe4c <vfprintf+0x108>
     e32:	83 36       	cpi	r24, 0x63	; 99
     e34:	31 f0       	breq	.+12     	; 0xe42 <vfprintf+0xfe>
     e36:	83 37       	cpi	r24, 0x73	; 115
     e38:	71 f0       	breq	.+28     	; 0xe56 <vfprintf+0x112>
     e3a:	83 35       	cpi	r24, 0x53	; 83
     e3c:	09 f0       	breq	.+2      	; 0xe40 <vfprintf+0xfc>
     e3e:	5b c0       	rjmp	.+182    	; 0xef6 <vfprintf+0x1b2>
     e40:	22 c0       	rjmp	.+68     	; 0xe86 <vfprintf+0x142>
     e42:	f8 01       	movw	r30, r16
     e44:	80 81       	ld	r24, Z
     e46:	89 83       	std	Y+1, r24	; 0x01
     e48:	0e 5f       	subi	r16, 0xFE	; 254
     e4a:	1f 4f       	sbci	r17, 0xFF	; 255
     e4c:	44 24       	eor	r4, r4
     e4e:	43 94       	inc	r4
     e50:	51 2c       	mov	r5, r1
     e52:	54 01       	movw	r10, r8
     e54:	15 c0       	rjmp	.+42     	; 0xe80 <vfprintf+0x13c>
     e56:	38 01       	movw	r6, r16
     e58:	f2 e0       	ldi	r31, 0x02	; 2
     e5a:	6f 0e       	add	r6, r31
     e5c:	71 1c       	adc	r7, r1
     e5e:	f8 01       	movw	r30, r16
     e60:	a0 80       	ld	r10, Z
     e62:	b1 80       	ldd	r11, Z+1	; 0x01
     e64:	26 ff       	sbrs	r18, 6
     e66:	03 c0       	rjmp	.+6      	; 0xe6e <vfprintf+0x12a>
     e68:	65 2d       	mov	r22, r5
     e6a:	70 e0       	ldi	r23, 0x00	; 0
     e6c:	02 c0       	rjmp	.+4      	; 0xe72 <vfprintf+0x12e>
     e6e:	6f ef       	ldi	r22, 0xFF	; 255
     e70:	7f ef       	ldi	r23, 0xFF	; 255
     e72:	c5 01       	movw	r24, r10
     e74:	2c 87       	std	Y+12, r18	; 0x0c
     e76:	0e 94 7f 08 	call	0x10fe	; 0x10fe <strnlen>
     e7a:	2c 01       	movw	r4, r24
     e7c:	83 01       	movw	r16, r6
     e7e:	2c 85       	ldd	r18, Y+12	; 0x0c
     e80:	2f 77       	andi	r18, 0x7F	; 127
     e82:	22 2e       	mov	r2, r18
     e84:	17 c0       	rjmp	.+46     	; 0xeb4 <vfprintf+0x170>
     e86:	38 01       	movw	r6, r16
     e88:	f2 e0       	ldi	r31, 0x02	; 2
     e8a:	6f 0e       	add	r6, r31
     e8c:	71 1c       	adc	r7, r1
     e8e:	f8 01       	movw	r30, r16
     e90:	a0 80       	ld	r10, Z
     e92:	b1 80       	ldd	r11, Z+1	; 0x01
     e94:	26 ff       	sbrs	r18, 6
     e96:	03 c0       	rjmp	.+6      	; 0xe9e <vfprintf+0x15a>
     e98:	65 2d       	mov	r22, r5
     e9a:	70 e0       	ldi	r23, 0x00	; 0
     e9c:	02 c0       	rjmp	.+4      	; 0xea2 <vfprintf+0x15e>
     e9e:	6f ef       	ldi	r22, 0xFF	; 255
     ea0:	7f ef       	ldi	r23, 0xFF	; 255
     ea2:	c5 01       	movw	r24, r10
     ea4:	2c 87       	std	Y+12, r18	; 0x0c
     ea6:	0e 94 74 08 	call	0x10e8	; 0x10e8 <strnlen_P>
     eaa:	2c 01       	movw	r4, r24
     eac:	2c 85       	ldd	r18, Y+12	; 0x0c
     eae:	20 68       	ori	r18, 0x80	; 128
     eb0:	22 2e       	mov	r2, r18
     eb2:	83 01       	movw	r16, r6
     eb4:	23 fc       	sbrc	r2, 3
     eb6:	1b c0       	rjmp	.+54     	; 0xeee <vfprintf+0x1aa>
     eb8:	83 2d       	mov	r24, r3
     eba:	90 e0       	ldi	r25, 0x00	; 0
     ebc:	48 16       	cp	r4, r24
     ebe:	59 06       	cpc	r5, r25
     ec0:	b0 f4       	brcc	.+44     	; 0xeee <vfprintf+0x1aa>
     ec2:	b7 01       	movw	r22, r14
     ec4:	80 e2       	ldi	r24, 0x20	; 32
     ec6:	90 e0       	ldi	r25, 0x00	; 0
     ec8:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
     ecc:	3a 94       	dec	r3
     ece:	f4 cf       	rjmp	.-24     	; 0xeb8 <vfprintf+0x174>
     ed0:	f5 01       	movw	r30, r10
     ed2:	27 fc       	sbrc	r2, 7
     ed4:	85 91       	lpm	r24, Z+
     ed6:	27 fe       	sbrs	r2, 7
     ed8:	81 91       	ld	r24, Z+
     eda:	5f 01       	movw	r10, r30
     edc:	b7 01       	movw	r22, r14
     ede:	90 e0       	ldi	r25, 0x00	; 0
     ee0:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
     ee4:	31 10       	cpse	r3, r1
     ee6:	3a 94       	dec	r3
     ee8:	f1 e0       	ldi	r31, 0x01	; 1
     eea:	4f 1a       	sub	r4, r31
     eec:	51 08       	sbc	r5, r1
     eee:	41 14       	cp	r4, r1
     ef0:	51 04       	cpc	r5, r1
     ef2:	71 f7       	brne	.-36     	; 0xed0 <vfprintf+0x18c>
     ef4:	e5 c0       	rjmp	.+458    	; 0x10c0 <vfprintf+0x37c>
     ef6:	84 36       	cpi	r24, 0x64	; 100
     ef8:	11 f0       	breq	.+4      	; 0xefe <vfprintf+0x1ba>
     efa:	89 36       	cpi	r24, 0x69	; 105
     efc:	39 f5       	brne	.+78     	; 0xf4c <vfprintf+0x208>
     efe:	f8 01       	movw	r30, r16
     f00:	27 ff       	sbrs	r18, 7
     f02:	07 c0       	rjmp	.+14     	; 0xf12 <vfprintf+0x1ce>
     f04:	60 81       	ld	r22, Z
     f06:	71 81       	ldd	r23, Z+1	; 0x01
     f08:	82 81       	ldd	r24, Z+2	; 0x02
     f0a:	93 81       	ldd	r25, Z+3	; 0x03
     f0c:	0c 5f       	subi	r16, 0xFC	; 252
     f0e:	1f 4f       	sbci	r17, 0xFF	; 255
     f10:	08 c0       	rjmp	.+16     	; 0xf22 <vfprintf+0x1de>
     f12:	60 81       	ld	r22, Z
     f14:	71 81       	ldd	r23, Z+1	; 0x01
     f16:	88 27       	eor	r24, r24
     f18:	77 fd       	sbrc	r23, 7
     f1a:	80 95       	com	r24
     f1c:	98 2f       	mov	r25, r24
     f1e:	0e 5f       	subi	r16, 0xFE	; 254
     f20:	1f 4f       	sbci	r17, 0xFF	; 255
     f22:	2f 76       	andi	r18, 0x6F	; 111
     f24:	b2 2e       	mov	r11, r18
     f26:	97 ff       	sbrs	r25, 7
     f28:	09 c0       	rjmp	.+18     	; 0xf3c <vfprintf+0x1f8>
     f2a:	90 95       	com	r25
     f2c:	80 95       	com	r24
     f2e:	70 95       	com	r23
     f30:	61 95       	neg	r22
     f32:	7f 4f       	sbci	r23, 0xFF	; 255
     f34:	8f 4f       	sbci	r24, 0xFF	; 255
     f36:	9f 4f       	sbci	r25, 0xFF	; 255
     f38:	20 68       	ori	r18, 0x80	; 128
     f3a:	b2 2e       	mov	r11, r18
     f3c:	2a e0       	ldi	r18, 0x0A	; 10
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	a4 01       	movw	r20, r8
     f42:	0e 94 bc 08 	call	0x1178	; 0x1178 <__ultoa_invert>
     f46:	a8 2e       	mov	r10, r24
     f48:	a8 18       	sub	r10, r8
     f4a:	44 c0       	rjmp	.+136    	; 0xfd4 <vfprintf+0x290>
     f4c:	85 37       	cpi	r24, 0x75	; 117
     f4e:	29 f4       	brne	.+10     	; 0xf5a <vfprintf+0x216>
     f50:	2f 7e       	andi	r18, 0xEF	; 239
     f52:	b2 2e       	mov	r11, r18
     f54:	2a e0       	ldi	r18, 0x0A	; 10
     f56:	30 e0       	ldi	r19, 0x00	; 0
     f58:	25 c0       	rjmp	.+74     	; 0xfa4 <vfprintf+0x260>
     f5a:	f2 2f       	mov	r31, r18
     f5c:	f9 7f       	andi	r31, 0xF9	; 249
     f5e:	bf 2e       	mov	r11, r31
     f60:	8f 36       	cpi	r24, 0x6F	; 111
     f62:	c1 f0       	breq	.+48     	; 0xf94 <vfprintf+0x250>
     f64:	18 f4       	brcc	.+6      	; 0xf6c <vfprintf+0x228>
     f66:	88 35       	cpi	r24, 0x58	; 88
     f68:	79 f0       	breq	.+30     	; 0xf88 <vfprintf+0x244>
     f6a:	b4 c0       	rjmp	.+360    	; 0x10d4 <vfprintf+0x390>
     f6c:	80 37       	cpi	r24, 0x70	; 112
     f6e:	19 f0       	breq	.+6      	; 0xf76 <vfprintf+0x232>
     f70:	88 37       	cpi	r24, 0x78	; 120
     f72:	21 f0       	breq	.+8      	; 0xf7c <vfprintf+0x238>
     f74:	af c0       	rjmp	.+350    	; 0x10d4 <vfprintf+0x390>
     f76:	2f 2f       	mov	r18, r31
     f78:	20 61       	ori	r18, 0x10	; 16
     f7a:	b2 2e       	mov	r11, r18
     f7c:	b4 fe       	sbrs	r11, 4
     f7e:	0d c0       	rjmp	.+26     	; 0xf9a <vfprintf+0x256>
     f80:	8b 2d       	mov	r24, r11
     f82:	84 60       	ori	r24, 0x04	; 4
     f84:	b8 2e       	mov	r11, r24
     f86:	09 c0       	rjmp	.+18     	; 0xf9a <vfprintf+0x256>
     f88:	24 ff       	sbrs	r18, 4
     f8a:	0a c0       	rjmp	.+20     	; 0xfa0 <vfprintf+0x25c>
     f8c:	9f 2f       	mov	r25, r31
     f8e:	96 60       	ori	r25, 0x06	; 6
     f90:	b9 2e       	mov	r11, r25
     f92:	06 c0       	rjmp	.+12     	; 0xfa0 <vfprintf+0x25c>
     f94:	28 e0       	ldi	r18, 0x08	; 8
     f96:	30 e0       	ldi	r19, 0x00	; 0
     f98:	05 c0       	rjmp	.+10     	; 0xfa4 <vfprintf+0x260>
     f9a:	20 e1       	ldi	r18, 0x10	; 16
     f9c:	30 e0       	ldi	r19, 0x00	; 0
     f9e:	02 c0       	rjmp	.+4      	; 0xfa4 <vfprintf+0x260>
     fa0:	20 e1       	ldi	r18, 0x10	; 16
     fa2:	32 e0       	ldi	r19, 0x02	; 2
     fa4:	f8 01       	movw	r30, r16
     fa6:	b7 fe       	sbrs	r11, 7
     fa8:	07 c0       	rjmp	.+14     	; 0xfb8 <vfprintf+0x274>
     faa:	60 81       	ld	r22, Z
     fac:	71 81       	ldd	r23, Z+1	; 0x01
     fae:	82 81       	ldd	r24, Z+2	; 0x02
     fb0:	93 81       	ldd	r25, Z+3	; 0x03
     fb2:	0c 5f       	subi	r16, 0xFC	; 252
     fb4:	1f 4f       	sbci	r17, 0xFF	; 255
     fb6:	06 c0       	rjmp	.+12     	; 0xfc4 <vfprintf+0x280>
     fb8:	60 81       	ld	r22, Z
     fba:	71 81       	ldd	r23, Z+1	; 0x01
     fbc:	80 e0       	ldi	r24, 0x00	; 0
     fbe:	90 e0       	ldi	r25, 0x00	; 0
     fc0:	0e 5f       	subi	r16, 0xFE	; 254
     fc2:	1f 4f       	sbci	r17, 0xFF	; 255
     fc4:	a4 01       	movw	r20, r8
     fc6:	0e 94 bc 08 	call	0x1178	; 0x1178 <__ultoa_invert>
     fca:	a8 2e       	mov	r10, r24
     fcc:	a8 18       	sub	r10, r8
     fce:	fb 2d       	mov	r31, r11
     fd0:	ff 77       	andi	r31, 0x7F	; 127
     fd2:	bf 2e       	mov	r11, r31
     fd4:	b6 fe       	sbrs	r11, 6
     fd6:	0b c0       	rjmp	.+22     	; 0xfee <vfprintf+0x2aa>
     fd8:	2b 2d       	mov	r18, r11
     fda:	2e 7f       	andi	r18, 0xFE	; 254
     fdc:	a5 14       	cp	r10, r5
     fde:	50 f4       	brcc	.+20     	; 0xff4 <vfprintf+0x2b0>
     fe0:	b4 fe       	sbrs	r11, 4
     fe2:	0a c0       	rjmp	.+20     	; 0xff8 <vfprintf+0x2b4>
     fe4:	b2 fc       	sbrc	r11, 2
     fe6:	08 c0       	rjmp	.+16     	; 0xff8 <vfprintf+0x2b4>
     fe8:	2b 2d       	mov	r18, r11
     fea:	2e 7e       	andi	r18, 0xEE	; 238
     fec:	05 c0       	rjmp	.+10     	; 0xff8 <vfprintf+0x2b4>
     fee:	7a 2c       	mov	r7, r10
     ff0:	2b 2d       	mov	r18, r11
     ff2:	03 c0       	rjmp	.+6      	; 0xffa <vfprintf+0x2b6>
     ff4:	7a 2c       	mov	r7, r10
     ff6:	01 c0       	rjmp	.+2      	; 0xffa <vfprintf+0x2b6>
     ff8:	75 2c       	mov	r7, r5
     ffa:	24 ff       	sbrs	r18, 4
     ffc:	0d c0       	rjmp	.+26     	; 0x1018 <vfprintf+0x2d4>
     ffe:	fe 01       	movw	r30, r28
    1000:	ea 0d       	add	r30, r10
    1002:	f1 1d       	adc	r31, r1
    1004:	80 81       	ld	r24, Z
    1006:	80 33       	cpi	r24, 0x30	; 48
    1008:	11 f4       	brne	.+4      	; 0x100e <vfprintf+0x2ca>
    100a:	29 7e       	andi	r18, 0xE9	; 233
    100c:	09 c0       	rjmp	.+18     	; 0x1020 <vfprintf+0x2dc>
    100e:	22 ff       	sbrs	r18, 2
    1010:	06 c0       	rjmp	.+12     	; 0x101e <vfprintf+0x2da>
    1012:	73 94       	inc	r7
    1014:	73 94       	inc	r7
    1016:	04 c0       	rjmp	.+8      	; 0x1020 <vfprintf+0x2dc>
    1018:	82 2f       	mov	r24, r18
    101a:	86 78       	andi	r24, 0x86	; 134
    101c:	09 f0       	breq	.+2      	; 0x1020 <vfprintf+0x2dc>
    101e:	73 94       	inc	r7
    1020:	23 fd       	sbrc	r18, 3
    1022:	13 c0       	rjmp	.+38     	; 0x104a <vfprintf+0x306>
    1024:	20 ff       	sbrs	r18, 0
    1026:	06 c0       	rjmp	.+12     	; 0x1034 <vfprintf+0x2f0>
    1028:	5a 2c       	mov	r5, r10
    102a:	73 14       	cp	r7, r3
    102c:	18 f4       	brcc	.+6      	; 0x1034 <vfprintf+0x2f0>
    102e:	53 0c       	add	r5, r3
    1030:	57 18       	sub	r5, r7
    1032:	73 2c       	mov	r7, r3
    1034:	73 14       	cp	r7, r3
    1036:	68 f4       	brcc	.+26     	; 0x1052 <vfprintf+0x30e>
    1038:	b7 01       	movw	r22, r14
    103a:	80 e2       	ldi	r24, 0x20	; 32
    103c:	90 e0       	ldi	r25, 0x00	; 0
    103e:	2c 87       	std	Y+12, r18	; 0x0c
    1040:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
    1044:	73 94       	inc	r7
    1046:	2c 85       	ldd	r18, Y+12	; 0x0c
    1048:	f5 cf       	rjmp	.-22     	; 0x1034 <vfprintf+0x2f0>
    104a:	73 14       	cp	r7, r3
    104c:	10 f4       	brcc	.+4      	; 0x1052 <vfprintf+0x30e>
    104e:	37 18       	sub	r3, r7
    1050:	01 c0       	rjmp	.+2      	; 0x1054 <vfprintf+0x310>
    1052:	31 2c       	mov	r3, r1
    1054:	24 ff       	sbrs	r18, 4
    1056:	12 c0       	rjmp	.+36     	; 0x107c <vfprintf+0x338>
    1058:	b7 01       	movw	r22, r14
    105a:	80 e3       	ldi	r24, 0x30	; 48
    105c:	90 e0       	ldi	r25, 0x00	; 0
    105e:	2c 87       	std	Y+12, r18	; 0x0c
    1060:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
    1064:	2c 85       	ldd	r18, Y+12	; 0x0c
    1066:	22 ff       	sbrs	r18, 2
    1068:	17 c0       	rjmp	.+46     	; 0x1098 <vfprintf+0x354>
    106a:	21 ff       	sbrs	r18, 1
    106c:	03 c0       	rjmp	.+6      	; 0x1074 <vfprintf+0x330>
    106e:	88 e5       	ldi	r24, 0x58	; 88
    1070:	90 e0       	ldi	r25, 0x00	; 0
    1072:	02 c0       	rjmp	.+4      	; 0x1078 <vfprintf+0x334>
    1074:	88 e7       	ldi	r24, 0x78	; 120
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	b7 01       	movw	r22, r14
    107a:	0c c0       	rjmp	.+24     	; 0x1094 <vfprintf+0x350>
    107c:	82 2f       	mov	r24, r18
    107e:	86 78       	andi	r24, 0x86	; 134
    1080:	59 f0       	breq	.+22     	; 0x1098 <vfprintf+0x354>
    1082:	21 fd       	sbrc	r18, 1
    1084:	02 c0       	rjmp	.+4      	; 0x108a <vfprintf+0x346>
    1086:	80 e2       	ldi	r24, 0x20	; 32
    1088:	01 c0       	rjmp	.+2      	; 0x108c <vfprintf+0x348>
    108a:	8b e2       	ldi	r24, 0x2B	; 43
    108c:	27 fd       	sbrc	r18, 7
    108e:	8d e2       	ldi	r24, 0x2D	; 45
    1090:	b7 01       	movw	r22, r14
    1092:	90 e0       	ldi	r25, 0x00	; 0
    1094:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
    1098:	a5 14       	cp	r10, r5
    109a:	38 f4       	brcc	.+14     	; 0x10aa <vfprintf+0x366>
    109c:	b7 01       	movw	r22, r14
    109e:	80 e3       	ldi	r24, 0x30	; 48
    10a0:	90 e0       	ldi	r25, 0x00	; 0
    10a2:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
    10a6:	5a 94       	dec	r5
    10a8:	f7 cf       	rjmp	.-18     	; 0x1098 <vfprintf+0x354>
    10aa:	aa 94       	dec	r10
    10ac:	f4 01       	movw	r30, r8
    10ae:	ea 0d       	add	r30, r10
    10b0:	f1 1d       	adc	r31, r1
    10b2:	80 81       	ld	r24, Z
    10b4:	b7 01       	movw	r22, r14
    10b6:	90 e0       	ldi	r25, 0x00	; 0
    10b8:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
    10bc:	a1 10       	cpse	r10, r1
    10be:	f5 cf       	rjmp	.-22     	; 0x10aa <vfprintf+0x366>
    10c0:	33 20       	and	r3, r3
    10c2:	09 f4       	brne	.+2      	; 0x10c6 <vfprintf+0x382>
    10c4:	51 ce       	rjmp	.-862    	; 0xd68 <vfprintf+0x24>
    10c6:	b7 01       	movw	r22, r14
    10c8:	80 e2       	ldi	r24, 0x20	; 32
    10ca:	90 e0       	ldi	r25, 0x00	; 0
    10cc:	0e 94 8a 08 	call	0x1114	; 0x1114 <fputc>
    10d0:	3a 94       	dec	r3
    10d2:	f6 cf       	rjmp	.-20     	; 0x10c0 <vfprintf+0x37c>
    10d4:	f7 01       	movw	r30, r14
    10d6:	86 81       	ldd	r24, Z+6	; 0x06
    10d8:	97 81       	ldd	r25, Z+7	; 0x07
    10da:	02 c0       	rjmp	.+4      	; 0x10e0 <vfprintf+0x39c>
    10dc:	8f ef       	ldi	r24, 0xFF	; 255
    10de:	9f ef       	ldi	r25, 0xFF	; 255
    10e0:	2c 96       	adiw	r28, 0x0c	; 12
    10e2:	e2 e1       	ldi	r30, 0x12	; 18
    10e4:	0c 94 36 09 	jmp	0x126c	; 0x126c <__epilogue_restores__>

000010e8 <strnlen_P>:
    10e8:	fc 01       	movw	r30, r24
    10ea:	05 90       	lpm	r0, Z+
    10ec:	61 50       	subi	r22, 0x01	; 1
    10ee:	70 40       	sbci	r23, 0x00	; 0
    10f0:	01 10       	cpse	r0, r1
    10f2:	d8 f7       	brcc	.-10     	; 0x10ea <strnlen_P+0x2>
    10f4:	80 95       	com	r24
    10f6:	90 95       	com	r25
    10f8:	8e 0f       	add	r24, r30
    10fa:	9f 1f       	adc	r25, r31
    10fc:	08 95       	ret

000010fe <strnlen>:
    10fe:	fc 01       	movw	r30, r24
    1100:	61 50       	subi	r22, 0x01	; 1
    1102:	70 40       	sbci	r23, 0x00	; 0
    1104:	01 90       	ld	r0, Z+
    1106:	01 10       	cpse	r0, r1
    1108:	d8 f7       	brcc	.-10     	; 0x1100 <strnlen+0x2>
    110a:	80 95       	com	r24
    110c:	90 95       	com	r25
    110e:	8e 0f       	add	r24, r30
    1110:	9f 1f       	adc	r25, r31
    1112:	08 95       	ret

00001114 <fputc>:
    1114:	0f 93       	push	r16
    1116:	1f 93       	push	r17
    1118:	cf 93       	push	r28
    111a:	df 93       	push	r29
    111c:	18 2f       	mov	r17, r24
    111e:	09 2f       	mov	r16, r25
    1120:	eb 01       	movw	r28, r22
    1122:	8b 81       	ldd	r24, Y+3	; 0x03
    1124:	81 fd       	sbrc	r24, 1
    1126:	03 c0       	rjmp	.+6      	; 0x112e <fputc+0x1a>
    1128:	8f ef       	ldi	r24, 0xFF	; 255
    112a:	9f ef       	ldi	r25, 0xFF	; 255
    112c:	20 c0       	rjmp	.+64     	; 0x116e <fputc+0x5a>
    112e:	82 ff       	sbrs	r24, 2
    1130:	10 c0       	rjmp	.+32     	; 0x1152 <fputc+0x3e>
    1132:	4e 81       	ldd	r20, Y+6	; 0x06
    1134:	5f 81       	ldd	r21, Y+7	; 0x07
    1136:	2c 81       	ldd	r18, Y+4	; 0x04
    1138:	3d 81       	ldd	r19, Y+5	; 0x05
    113a:	42 17       	cp	r20, r18
    113c:	53 07       	cpc	r21, r19
    113e:	7c f4       	brge	.+30     	; 0x115e <fputc+0x4a>
    1140:	e8 81       	ld	r30, Y
    1142:	f9 81       	ldd	r31, Y+1	; 0x01
    1144:	9f 01       	movw	r18, r30
    1146:	2f 5f       	subi	r18, 0xFF	; 255
    1148:	3f 4f       	sbci	r19, 0xFF	; 255
    114a:	39 83       	std	Y+1, r19	; 0x01
    114c:	28 83       	st	Y, r18
    114e:	10 83       	st	Z, r17
    1150:	06 c0       	rjmp	.+12     	; 0x115e <fputc+0x4a>
    1152:	e8 85       	ldd	r30, Y+8	; 0x08
    1154:	f9 85       	ldd	r31, Y+9	; 0x09
    1156:	81 2f       	mov	r24, r17
    1158:	09 95       	icall
    115a:	89 2b       	or	r24, r25
    115c:	29 f7       	brne	.-54     	; 0x1128 <fputc+0x14>
    115e:	2e 81       	ldd	r18, Y+6	; 0x06
    1160:	3f 81       	ldd	r19, Y+7	; 0x07
    1162:	2f 5f       	subi	r18, 0xFF	; 255
    1164:	3f 4f       	sbci	r19, 0xFF	; 255
    1166:	3f 83       	std	Y+7, r19	; 0x07
    1168:	2e 83       	std	Y+6, r18	; 0x06
    116a:	81 2f       	mov	r24, r17
    116c:	90 2f       	mov	r25, r16
    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	1f 91       	pop	r17
    1174:	0f 91       	pop	r16
    1176:	08 95       	ret

00001178 <__ultoa_invert>:
    1178:	fa 01       	movw	r30, r20
    117a:	aa 27       	eor	r26, r26
    117c:	28 30       	cpi	r18, 0x08	; 8
    117e:	51 f1       	breq	.+84     	; 0x11d4 <__ultoa_invert+0x5c>
    1180:	20 31       	cpi	r18, 0x10	; 16
    1182:	81 f1       	breq	.+96     	; 0x11e4 <__ultoa_invert+0x6c>
    1184:	e8 94       	clt
    1186:	6f 93       	push	r22
    1188:	6e 7f       	andi	r22, 0xFE	; 254
    118a:	6e 5f       	subi	r22, 0xFE	; 254
    118c:	7f 4f       	sbci	r23, 0xFF	; 255
    118e:	8f 4f       	sbci	r24, 0xFF	; 255
    1190:	9f 4f       	sbci	r25, 0xFF	; 255
    1192:	af 4f       	sbci	r26, 0xFF	; 255
    1194:	b1 e0       	ldi	r27, 0x01	; 1
    1196:	3e d0       	rcall	.+124    	; 0x1214 <__ultoa_invert+0x9c>
    1198:	b4 e0       	ldi	r27, 0x04	; 4
    119a:	3c d0       	rcall	.+120    	; 0x1214 <__ultoa_invert+0x9c>
    119c:	67 0f       	add	r22, r23
    119e:	78 1f       	adc	r23, r24
    11a0:	89 1f       	adc	r24, r25
    11a2:	9a 1f       	adc	r25, r26
    11a4:	a1 1d       	adc	r26, r1
    11a6:	68 0f       	add	r22, r24
    11a8:	79 1f       	adc	r23, r25
    11aa:	8a 1f       	adc	r24, r26
    11ac:	91 1d       	adc	r25, r1
    11ae:	a1 1d       	adc	r26, r1
    11b0:	6a 0f       	add	r22, r26
    11b2:	71 1d       	adc	r23, r1
    11b4:	81 1d       	adc	r24, r1
    11b6:	91 1d       	adc	r25, r1
    11b8:	a1 1d       	adc	r26, r1
    11ba:	20 d0       	rcall	.+64     	; 0x11fc <__ultoa_invert+0x84>
    11bc:	09 f4       	brne	.+2      	; 0x11c0 <__ultoa_invert+0x48>
    11be:	68 94       	set
    11c0:	3f 91       	pop	r19
    11c2:	2a e0       	ldi	r18, 0x0A	; 10
    11c4:	26 9f       	mul	r18, r22
    11c6:	11 24       	eor	r1, r1
    11c8:	30 19       	sub	r19, r0
    11ca:	30 5d       	subi	r19, 0xD0	; 208
    11cc:	31 93       	st	Z+, r19
    11ce:	de f6       	brtc	.-74     	; 0x1186 <__ultoa_invert+0xe>
    11d0:	cf 01       	movw	r24, r30
    11d2:	08 95       	ret
    11d4:	46 2f       	mov	r20, r22
    11d6:	47 70       	andi	r20, 0x07	; 7
    11d8:	40 5d       	subi	r20, 0xD0	; 208
    11da:	41 93       	st	Z+, r20
    11dc:	b3 e0       	ldi	r27, 0x03	; 3
    11de:	0f d0       	rcall	.+30     	; 0x11fe <__ultoa_invert+0x86>
    11e0:	c9 f7       	brne	.-14     	; 0x11d4 <__ultoa_invert+0x5c>
    11e2:	f6 cf       	rjmp	.-20     	; 0x11d0 <__ultoa_invert+0x58>
    11e4:	46 2f       	mov	r20, r22
    11e6:	4f 70       	andi	r20, 0x0F	; 15
    11e8:	40 5d       	subi	r20, 0xD0	; 208
    11ea:	4a 33       	cpi	r20, 0x3A	; 58
    11ec:	18 f0       	brcs	.+6      	; 0x11f4 <__ultoa_invert+0x7c>
    11ee:	49 5d       	subi	r20, 0xD9	; 217
    11f0:	31 fd       	sbrc	r19, 1
    11f2:	40 52       	subi	r20, 0x20	; 32
    11f4:	41 93       	st	Z+, r20
    11f6:	02 d0       	rcall	.+4      	; 0x11fc <__ultoa_invert+0x84>
    11f8:	a9 f7       	brne	.-22     	; 0x11e4 <__ultoa_invert+0x6c>
    11fa:	ea cf       	rjmp	.-44     	; 0x11d0 <__ultoa_invert+0x58>
    11fc:	b4 e0       	ldi	r27, 0x04	; 4
    11fe:	a6 95       	lsr	r26
    1200:	97 95       	ror	r25
    1202:	87 95       	ror	r24
    1204:	77 95       	ror	r23
    1206:	67 95       	ror	r22
    1208:	ba 95       	dec	r27
    120a:	c9 f7       	brne	.-14     	; 0x11fe <__ultoa_invert+0x86>
    120c:	00 97       	sbiw	r24, 0x00	; 0
    120e:	61 05       	cpc	r22, r1
    1210:	71 05       	cpc	r23, r1
    1212:	08 95       	ret
    1214:	9b 01       	movw	r18, r22
    1216:	ac 01       	movw	r20, r24
    1218:	0a 2e       	mov	r0, r26
    121a:	06 94       	lsr	r0
    121c:	57 95       	ror	r21
    121e:	47 95       	ror	r20
    1220:	37 95       	ror	r19
    1222:	27 95       	ror	r18
    1224:	ba 95       	dec	r27
    1226:	c9 f7       	brne	.-14     	; 0x121a <__ultoa_invert+0xa2>
    1228:	62 0f       	add	r22, r18
    122a:	73 1f       	adc	r23, r19
    122c:	84 1f       	adc	r24, r20
    122e:	95 1f       	adc	r25, r21
    1230:	a0 1d       	adc	r26, r0
    1232:	08 95       	ret

00001234 <__prologue_saves__>:
    1234:	2f 92       	push	r2
    1236:	3f 92       	push	r3
    1238:	4f 92       	push	r4
    123a:	5f 92       	push	r5
    123c:	6f 92       	push	r6
    123e:	7f 92       	push	r7
    1240:	8f 92       	push	r8
    1242:	9f 92       	push	r9
    1244:	af 92       	push	r10
    1246:	bf 92       	push	r11
    1248:	cf 92       	push	r12
    124a:	df 92       	push	r13
    124c:	ef 92       	push	r14
    124e:	ff 92       	push	r15
    1250:	0f 93       	push	r16
    1252:	1f 93       	push	r17
    1254:	cf 93       	push	r28
    1256:	df 93       	push	r29
    1258:	cd b7       	in	r28, 0x3d	; 61
    125a:	de b7       	in	r29, 0x3e	; 62
    125c:	ca 1b       	sub	r28, r26
    125e:	db 0b       	sbc	r29, r27
    1260:	0f b6       	in	r0, 0x3f	; 63
    1262:	f8 94       	cli
    1264:	de bf       	out	0x3e, r29	; 62
    1266:	0f be       	out	0x3f, r0	; 63
    1268:	cd bf       	out	0x3d, r28	; 61
    126a:	09 94       	ijmp

0000126c <__epilogue_restores__>:
    126c:	2a 88       	ldd	r2, Y+18	; 0x12
    126e:	39 88       	ldd	r3, Y+17	; 0x11
    1270:	48 88       	ldd	r4, Y+16	; 0x10
    1272:	5f 84       	ldd	r5, Y+15	; 0x0f
    1274:	6e 84       	ldd	r6, Y+14	; 0x0e
    1276:	7d 84       	ldd	r7, Y+13	; 0x0d
    1278:	8c 84       	ldd	r8, Y+12	; 0x0c
    127a:	9b 84       	ldd	r9, Y+11	; 0x0b
    127c:	aa 84       	ldd	r10, Y+10	; 0x0a
    127e:	b9 84       	ldd	r11, Y+9	; 0x09
    1280:	c8 84       	ldd	r12, Y+8	; 0x08
    1282:	df 80       	ldd	r13, Y+7	; 0x07
    1284:	ee 80       	ldd	r14, Y+6	; 0x06
    1286:	fd 80       	ldd	r15, Y+5	; 0x05
    1288:	0c 81       	ldd	r16, Y+4	; 0x04
    128a:	1b 81       	ldd	r17, Y+3	; 0x03
    128c:	aa 81       	ldd	r26, Y+2	; 0x02
    128e:	b9 81       	ldd	r27, Y+1	; 0x01
    1290:	ce 0f       	add	r28, r30
    1292:	d1 1d       	adc	r29, r1
    1294:	0f b6       	in	r0, 0x3f	; 63
    1296:	f8 94       	cli
    1298:	de bf       	out	0x3e, r29	; 62
    129a:	0f be       	out	0x3f, r0	; 63
    129c:	cd bf       	out	0x3d, r28	; 61
    129e:	ed 01       	movw	r28, r26
    12a0:	08 95       	ret

000012a2 <_exit>:
    12a2:	f8 94       	cli

000012a4 <__stop_program>:
    12a4:	ff cf       	rjmp	.-2      	; 0x12a4 <__stop_program>
